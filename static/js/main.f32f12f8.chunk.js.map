{"version":3,"sources":["assets/img/orbitBanner3000.png","variables/Variables.jsx","assets/sass/light-bootstrap-dashboard.css?v=1.2.0","app/restHelper.jsx","app/Logger.jsx","app/db/UsersTable.jsx","app/logInHelper.jsx","app/lang/dic.js","app/lang/lang.js","components/Header/HeaderLinks.jsx","app/adminHelper.jsx","components/Card/Card.jsx","app/db/TanksTable.jsx","components/StatsCard/StatsCard.jsx","app/notificationHelper.jsx","app/db/TankReadings.jsx","views/Notifications/TanksNotifications.jsx","app/db/CustomersTable.jsx","components/App/TankCard.jsx","views/Tanks/Tanks.jsx","views/Dashboard/RangeHelper.jsx","components/App/DateAndTime.jsx","views/Dashboard/DateAndTimeModal.jsx","views/Admin/TanksSelection.jsx","views/Dashboard/RangeView.jsx","components/App/VisGraph.jsx","app/readingsHelper.jsx","views/App/Spinner.jsx","views/Graph/Graph.jsx","views/TableList/TableList.jsx","views/TableList/PdfMaker.jsx","views/Data/Data.jsx","components/App/Map.jsx","views/Location/Locations.jsx","views/Dashboard/Dashboard.jsx","views/Admin/CustomerForm.jsx","views/Admin/UsersForm.jsx","views/Admin/TankForm.jsx","views/Admin/Customers.jsx","views/Admin/AlerstForm.jsx","views/Admin/Tanks.jsx","views/Admin/Users.jsx","views/Admin/Alerts.jsx","views/Admin/Logger.jsx","views/Icons/Icons.jsx","views/App/LogOut.jsx","routes/dashboard.jsx","components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","views/App/login.jsx","routes/index.jsx","layouts/Dashboard/Dashboard.jsx","index.js","assets/sass/lbd/_variables.scss"],"names":["module","exports","__webpack_require__","p","defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","primaryColor","primarySideColor","secondaryColor","menuTextColor","customers","users","levelMonitoring","getTankReadingStartEndUri","tankId","from","to","getCustomersUri","getUsersUri","logList","AppLogger","msg","d","Date","log","getHours","slice","getMinutes","getSeconds","unshift","length","splice","usersList","UsersTable","pop","callBack","this","clearUsers","uri","axios","get","then","response","console","data","index","push","catch","userName","name","sort","a","b","customer","pass","role","callback","user","passwd","customer_id","post","_this","delete","readUsers","password","forceRead","LogInHelper","Object","classCallCheck","logOutStr","userKey","createClass","key","getUser","getLogedInUser","Cookies","set","isLogIn","industries","liquids","sensors","dictionary","en","tankName","buildingName","volume","leftInTank","lastUpdate","capacity","liquid","sensorLength","sensor","tankLocation","tanksLocations","volumeHistory","Last 6H","Last 12H","Last 24H","Last 2 Days","Last Week","Select Range","Custom Range","latestData","selectEn","selectEs","logOut","customerName","mailAddress","addNewCustomer","add","cancel","update","addingNewUser","industry","Residential buildings","Commercial buildings","Hospitals","Hotels","Agriculture","Food and drinks","Oils and fuels","Emergency services","Utility service provider","water","diesel","fertilizer","levelAlert","heartbeat","Level OK","Level Below","Connected","Not Connected","es","getLang","lang","setLang","translate","text","translated","HeaderLinks","props","possibleConstructorReturn","getPrototypeOf","call","handleLogOut","location","reload","selectLang","setState","state","react_default","createElement","Nav","pullRight","Component","appIsready","isAppReady","getPrimaryColor","variables","getMenuTextColor","getBackgroundColor","getFormattedTime","time","moment","utc","format","Card","_Component","apply","arguments","inherits","colorStyle","className","plain","hCenter","title","category","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","legend","statsIcon","stats","tankList","TanksTable","getImeiFromUrl","str","search","imei","addTank","formState","customerId","postJson","iccid","liquid_type","sensor_type","heartbeat_timeout","sampling_interval","phone","building","level_alerts","getNewServer","updateTank","tank","put","getTankSettingsUri","deleteTank","url","customersId","tanks","getTank","split","readTanks","NotificationHelper","start","notifications","getLoggedInCustomerId","getCustomerTanks","tankIndex","getLevelNotificationsOnTank","map","notification","lowestAlert","alertIndex","status","at_level","alertObj","level","getHeartBeatNotificationForTank","heartbeat_ok","lastLevelMonitoring","numberOfTanks","lastReadingTime","TanksReading","getLastReadingTime","updateTankReadings","tt","getTankName","sample_level","actual_level","server_time","tank_time","range","request","responseURL","fromToLevelMonitoring","numberOfreadings","sorted","parseInt","tanksInfoReady","isLast","list","getCapacity","getLiquidType","toLowerCase","getSortReading","setClassParams","levelAlertView","alerts","alert","Alert","bsStyle","data-notify","heartBeatView","hearBeatAlerts","heartBeatAlert","customerList","CustomersTable","addCustomerToCustomers","id","getCustomer","mailingList","mailing_list","json","readCustomers","timeout","TankCard","asAlerts","startColor","endColor","textColor","tick","bind","assertThisInitialized","timer","setInterval","clearInterval","substring","factor","parseFloat","innerHeight","radius","getRadiusFromHeight","fillColor","interpolateRgb","interpolate","gradientStops","stopColor","darker","toString","stopOpacity","offset","brighter","lib_default","percent","textSize","textOffsetX","textOffsetY","textRenderer","Math","round","min","textPixels","valueStyle","percentStyle","riseAnimation","waveAnimation","waveFrequency","waveAmplitude","gradient","circleStyle","fill","waveStyle","textStyle","waveTextStyle","onClick","renderTank","renderTanks","readings","reading","asAlert","titleColor","Col","xs","sm","Card_Card","renderTanksParams","App_TankCard","isTankFiltered","filterStr","getCustomerId","getCustomerName","isAdmin","renderTableRow","t1","t2","renderTableRowForAlert","nh","levelAlerts","Table","striped","bordered","condensed","hover","renderFilterTanksCard","caller","md","FormControl","type","placeholder","onChange","e","target","RangeHelper","getFirstRangeInHours","rangesValues","getRanges","ranges","getRangeInHour","getSelectedString","getRangeForHourse","timeInHours","forClass","getReadingFromTo","rangeReady","getRangeFromTo","defaultProps","onHide","autoFocus","autoFocusEndDate","initialStartDate","initialEndDate","startDateId","START_DATE","startDatePlaceholderText","endDateId","endDatePlaceholderText","disabled","required","screenReaderInputMessage","showClearDates","showDefaultInputIcon","customInputIcon","customArrowIcon","customCloseIcon","block","small","regular","renderMonthText","orientation","VERTIVAL_ORIENTATION","anchorDirection","ANCHOR_LEFT","horizontalMargin","withPortal","withFullScreenPortal","initialVisibleMonth","numberOfMonths","keepOpenOnDateSelect","reopenPickerOnClearDates","isRTL","navPrev","navNext","onPrevMonthClick","onNextMonthClick","onClose","renderCalendarDay","undefined","renderDayContents","minimumNights","enableOutsideDays","isDayBlocked","isOutsideRange","isDayHighlighted","displayFormat","localeData","longDateFormat","monthFormat","phrases","DateRangePickerPhrases","stateDateWrapper","date","DateRangePickerWrapper","getNumberOfMonth","innerWidth","handelClose","startDate","toDate","endDate","focusedInput","END_DATE","onDatesChange","onFocusChange","_ref","_this2","_this$state","omit","react_dates","assign","React","DateAndTimeModal","createTimeArray","timeArray","hour","hourStr","dateSelected","end","closeModal","startTime","endTime","quickSelection","Modal","bsSize","aria-labelledby","Header","closeButton","Body","DateAndTime","DropdownButton","onSelect","MenuItem","eventKey","Footer","Button","TanksSelection","tankSelected","selectedTankName","getSelectedTank","ButtonGroup","RangeView","rangeSelected","rangeInHour","showDateAndTimeModal","hoursSelected","getDate","minutes","setHours","setMinutes","dateAndTimeModalClose","getTime","ButtonToolbar","TanksSelection_TanksSelection","Dashboard_DateAndTimeModal","show","VisGraph","getData","maxPoints","stayIndex","i","myFormatter","t","splitted","x","dy","getLegendItems","items","obj","colors","getxValues","tickTotal","dataLen","ret","firstX","hours","jumps","crosshairValues","legenItems","xValues","stroke","tickValues","tickFormat","line","ticks","v","replace","size","strokeColor","xType","curve","graphFilteredTank","dataFilteredTank","setGraphFilteredTank","setDataFilteredTank","isFiltered","getTanks","getFilteredReadings","readingsData","toConsumableArray","Spinner","react_loader_spinner_default","Graph","componentWillUnmount","rh","graphReadings","rangeIndex","retArray","maxX","maxCapacity","current","tmpData","currentIndex","levels","times","y","fromDashboard","components_Card_Card","Spinner_Spinner","rangeReadingToGraphData","selectedRange","Dashboard_RangeView","VisGraph_VisGraph","TableList","componentDidMount","Promise","all","ExcelTable","excelTableReady","getHeader","createData","arrayForExcel","arrayForPdf","arrayForTable","tanksNames","count","rangeReadings","sample","samples","vol","row","rowForExcel","creatPdfDocDefinition","array","table","headerRows","widths","body","pageBreak","exportToPdf","exportOrPrint","pdfDocDefinition","pdfMake","docDefinition","compress","pdfFonts","vfs","tableLayouts","exampleLayout","hLineWidth","node","vLineWidth","hLineColor","paddingLeft","paddingRight","createPdf","download","print","err","makePdf","renderExport","rangeButtons","test","navigator","userAgent","default","button","header","overflowY","prop","overflow","Data","tableReadings","views_TableList_TableList","MapContainer","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onMouseOver","activeMarkerTitle","onMapClicked","renderMarkers","markers","dist","onMouseover","lat","lng","getCenter","ignore","div","convertGpsPosition","pos","latSign","lngSign","floor","style1","google","zoom","onReady","mapIsReady","initialCenter","visible","GoogleApiWrapper","apiKey","Locations","lastTanksReadings","getLevelMonitoring","renderInfo","getMarkers","gps","long","contentHeight","Map","Dashboard","fastTimer","tickToggle","getLastReading","tanksReadingReady","dataIsReady","fastTick","logInHelper","lm","renderAlerts","getRangeReadingOnce","Grid","fluid","Row","views_Graph_Graph","Location_Locations","views_Data_Data","CustomerForm","_React$Component","restCallBack","message","hideButtons","formMessage","deleteMail","tmpMailingList","addMail","validateMail","mailAddrees","createMailForm","mail","align","validatCustomer","updateCustomer","FormGroup","controlId","validationState","ControlLabel","componentClass","renderFormCustomerFiled","deleteCustomer","_this3","addnewCustomerText","createForm","renderButtons","UsersForm","settingMessage","validate","indexOf","validatPass","validatUser","renderFormUsersFiled","addNewUser","SettingsModal","TankForm","_React$Component2","updateSettingsTimeOut","showSettingsModal","settingsModalText","updateSettingsModal","textArray","addTankCallBack","succedded","simConfigurationIndex","configureThingDone","configureThing","setServerIp","updateTankCallBack","samplingIntervalChanged","liquidSelected","sensorSelected","renderIccdAndPhone","iccidPh","phoneNumberPh","switchSimConfig","getToken","UserName","Password","token","sendSemsToThing","config","headers","Authorization","Message","From","nextFunction","setServerIpDone","setProtocol","smsTimeOut","setProtocolDone","updateData","liquidTypeIndex","sensorTypeIndex","imeiPh","namePh","buildingPh","capacityPh","highPh","sampleIntervalPh","runTimer","simConfigurationTitle","validateString","validateForm","renderFormTitle","renderTankFileds","addNewTank","TankForm_SettingsModal","Customers","customerInfoReady","getCustomers","operationCallBack","editCustomer","showCustomersModal","selectedCustomer","getFilteredCustomers","showTankForm","showUsersModal","buttonStyle","borderColor","whiteSpace","confirmText","confirm","concat","addUser","divider","_this4","item","renderManageCustomersButton","_this5","_this6","renderFilterCard","renderAddCustomrtButton","renderCustomers","CustomerForm_CustomerForm","closeCustomersModal","UsersForm_UsersForm","closeUsersModal","TankForm_TankForm","closeTankForm","AlertsForm","addAlert","statusMessage","alertId","subject","numberOfAlerts","updateAlerts","updateAlertsCallBack","getFormTitle","Tanks","tanksReady","editAlert","showAlerstForm","closeAlertsForm","renderManageTankButton","editTank","AlerstForm_AlertsForm","Users","usersReadyCallBack","usersTable","getUsers","renderActions","deleteUser","custeomrName","remove","renderUsers","Alerts","appIsredy","counter","renderAlertsTanks","showAlertsForm","renderAlertsAndEdit","levelNotification","hearBeatNotification","Logger","Icons","rel","href","lg","defaultValue","LogOut","Redirect","dashboardRoutes","path","icon","component","Alerst","redirect","mobileSidebarToggle","sidebarExists","preventDefault","document","documentElement","classList","toggle","collapse","views","pathname","Navbar","Brand","getBrand","Toggle","Collapse","Header_HeaderLinks","Sidebar","checkIfAppIsReady","appIsReady","routeName","updateDimensions","addEventListener","logInUser","data-color","src","logo","alt","upgrade","activeRoute","NavLink","activeClassName","LogIn","usersTableReady","showButton","showAlert","handleChange","loginAlert","logInAlert","_this$setState","defineProperty","handleHide","container","handleLogIn","indexRoutes","userTableReady","tanksTableReady","customersTableReady","allIsReady","dbReady","appDbReady","_notificationSystem","history","action","scrollTop","scrollingElement","refs","mainPanel","components_Sidebar_Sidebar","ref","components_Header_Header","Switch","Route","render","routeProps","handleClick","handleNotificationClick","login_LogIn","ReactDOM","HashRouter","packageJson","version","getElementById"],"mappings":"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BACA,eACA,YACA,eACA,mBACA,aACA,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CA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","file":"static/js/main.f32f12f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orbitBanner3000.3c0e7c7f.png\";","//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768 ? window.screen.width * 1 / 3 : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [80, 90, 100, 22, 33, 44, 88, 80],\n    [80, 88, 44, 33, 0, 99, 90, 80],\n    [22, 100, 80, 90, 44, 88, 80, 90]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 100,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Tank1\", \"Tank2\", \"Tank3\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"white\",\"primarySideColor\":\"#165B7D\",\"secondaryColor\":\"#e9f5ff\",\"menuTextColor\":\"#e3e2e2\",\"backgroundColor\":\"#e2e3e4\"};","const positionMonitoring = \"/positionMonitoring\";\n//const tanksSettings = \"/tanksSettings\";\nconst customers = \"/customers\";\nconst users = \"/users\";\nconst levelMonitoring = \"/tanklevels\";\n\nfunction getServer(){\n    let debug = false;\n\n    return debug === false ? \n        'https://euhpo9j3yi.execute-api.us-west-2.amazonaws.com/api/tanks' : \n        'http://localhost:3000';\n}\n\nfunction getNewServer(){\n    return 'https://jx7ltqwdt6.execute-api.us-east-1.amazonaws.com/prod';\n    //return 'https://wv6wvd40zb.execute-api.us-east-1.amazonaws.com/prod';\n    //return 'https://x98na0g8vl.execute-api.us-east-1.amazonaws.com/dev'\n}\n\nexport function getTankReadingUri(tankId,isLast){\n    if (tankId){\n        if (isLast){\n            return getNewServer() + levelMonitoring + \"/\" + tankId + \"?last=true\";\n        }\n        else{\n            return getNewServer() + levelMonitoring + \"/\" + tankId;\n        }\n    }\n    else\n        return getNewServer() + levelMonitoring;\n}\n\nexport function getTankReadingStartEndUri(tankId,from,to){\n    return getNewServer() + levelMonitoring + \"/\" + tankId + \"?from=\"+from + \"&to=\"+to;\n}\n\nexport function getCustomersUri(){\n    return getNewServer() + customers;\n}\n\nexport function getUsersUri(){\n    return getNewServer() + users;\n}\n\nexport function getCustomerUri(customer){\n    return getNewServer() + \"/customers/\" + customer;\n}\n\nexport function getPositionMonitoringUri(tankId){\n    return getServer() + positionMonitoring + \"/\" + tankId;\n}\n\nexport function getTankSettingsUri(){\n    return getNewServer() + \"/tanks\";\n}","let logList=[];\n\nexport const AppLogger = (msg) => {\n    var d = new Date();\n    d = ('0' + d.getHours()).slice(-2) + \":\" + ('0' + d.getMinutes()).slice(-2) + \":\" + ('0' + d.getSeconds()).slice(-2);\n    var log = d + \": \" + msg;\n    logList.unshift(log);\n    if (logList.length>500){\n        logList.splice(logList.length-1-20,20);\n    }\n    return (log);\n }\n\n export const AppLogerMessages = () => {\n    return logList;\n }\n","import axios from \"axios\";\nimport { getUsersUri } from \"app/restHelper.jsx\";\nimport { AppLogger } from \"../Logger\";\n\nlet usersList = [];\n\nexport default class UsersTable {\n    //static myInstance = null;\n\n    //static getInstance() {\n    //    if (UsersTable.myInstance == null) {\n    //        UsersTable.myInstance = new UsersTable();\n    //    }\n\n    //    return UsersTable.myInstance;\n    //}\n\n    //constructor() {\n    //    this.users = [];\n    //}\n\n    clearUsers() {\n        while (usersList.length > 0) {\n            usersList.pop();\n        }\n    }\n\n    readUsers(callBack) {\n        this.clearUsers();\n        let uri = getUsersUri();\n        axios\n            .get(uri)\n            .then(response => {\n                console.log(AppLogger( \"Got users list - \" + response.data.length + \" \" + usersList.length));\n                for (let index = 0; index < response.data.length; index++) {\n                    usersList.push(response.data[index]);\n                }\n                callBack && callBack();\n            })\n            .catch(error => console.log(AppLogger( error)));\n    }\n\n    getUser(userName) {\n        for (let index in usersList) {\n            if (usersList[index].name === userName) {\n                return usersList[index];\n            }\n        }\n\n        return null;\n    }\n\n    getUsers() {\n        return usersList.sort((a,b)=>a.customer>b.customer?1:0);\n    }\n\n    add(userName, pass, customer, role, callback) {\n        //check if the user already exist\n        for (let index in usersList) {\n            if (usersList[index].name === userName) {\n                callback && callback(\"user name already exist in the system\");\n                return;\n            }\n        }\n\n        let user = { \"name\": userName, \"passwd\": pass, \"customer_id\": customer, \"role\": role };\n        let uri = getUsersUri();\n        axios\n            .post(uri, user)\n            .then(response => {\n                console.log(AppLogger( \"User added successfully\"));\n                //                this.readUsers(null);\n                callback && callback(null);\n            })\n            .catch(error => {\n                console.log(AppLogger( error));\n                callback && callback(\"Failed to add user\");\n            }\n            );\n    }\n\n    remove(userName, callback) {\n        let uri = getUsersUri() + '/' + userName;\n        axios\n            .delete(uri)\n            .then(response => {\n                console.log(AppLogger( \"deleting user successfully\"));\n                this.readUsers(callback);\n            })\n            .catch(error => {\n                console.log(AppLogger( error));\n                callback && callback();\n            }\n            );\n    }\n\n    update(userName, pass) {\n        for (let index in usersList) {\n            if (usersList[index].name === userName.name) {\n                usersList[index].password = pass;\n                return;\n            }\n        }\n    }\n\n    start(callBack, forceRead) {\n        console.log(AppLogger( \"start\"));\n\n        if (forceRead || usersList.length === 0) {\n            this.readUsers(callBack);\n        }\n        else {\n            callBack && callBack();\n        }\n    }\n}","import { Cookies } from 'react-cookie';\nimport UsersTable from './db/UsersTable';\n\nexport class LogInHelper {\n\n    constructor() {\n        this.logOutStr = 'logedOut';\n        this.userKey = 'user';\n    }\n\n    isAdmin() {\n        let usersTable = new UsersTable();\n\n        let user = usersTable.getUser(this.getLogedInUser());\n\n        if (user && user.role === 'admin') {\n            return true;\n        }\n\n        return false;\n    }\n\n    getLogedInUser() {\n        let cookie = new Cookies();\n        let user = cookie.get(this.userKey);\n        if (user && user !== this.logOutStr) {\n            return user;\n        }\n        return \"\";\n    }\n\n    isLogIn() {\n        let cookie = new Cookies();\n        let user = cookie.get(this.userKey);\n        if (user && user !== this.logOutStr) {\n            return true;\n        }\n        return false;\n    }\n\n    logOut() {\n        let cookie = new Cookies();\n        cookie.set(this.userKey, this.logOutStr);\n    }\n\n    getLoggedInCustomerId() {\n        let usersTable = new UsersTable();\n\n        let user = usersTable.getUser(this.getLogedInUser());\n\n        if (user) {\n            return user.customer_id;\n        }\n        else if (this.isLogIn()) {\n            return \"admin\";\n        }\n        else {\n            return \"\";\n        }\n    }\n}\n\nexport default LogInHelper;","export const industries = ['Residential buildings', 'Commercial buildings', 'Hospitals', 'Hotels', 'Agriculture', 'Food and drinks', 'Oils and fuels', 'Emergency services', 'Utility service provider'];\nexport const liquids = ['water', 'diesel', 'fertilizer'];\nexport const sensors = [3, 4, 5, 6, 7, 8, 9, 10];\n\nexport const dictionary = {\n    'en': {\n        // Tank properties\n        'tankName': 'Tank Name',\n        'buildingName': 'Building Name',\n        'customer': 'Customer',\n        'volume': 'Volume',\n        'leftInTank': 'Left In Tank',\n        'lastUpdate': 'Last Update',\n        'capacity': 'Capacity',\n        'liquid': 'Liquid',\n        'sensorLength': 'Sensor Length',\n        'sensor': 'Sensor',\n        'tankLocation': 'Tank Location',\n        'tanksLocations': 'Tanks Locations',\n        'volumeHistory': 'Volume History',\n        // Tank properties\n        // ranges\n        'Last 6H': 'Last 6H',\n        'Last 12H': 'Last 12H',\n        'Last 24H': 'Last 24H',\n        'Last 2 Days': 'Last 2 Days',\n        'Last Week': 'Last Week',\n        'Select Range': 'Select Range',\n        'Custom Range': 'Custom Range',\n        'latestData': 'Latest Data',\n        // ranges\n\n\n        'selectEn': 'en - English',\n        'selectEs': 'es - Spanish',\n        'logOut': 'Log Out',\n        'customerName': 'Customer Name',\n        'mailAddress': 'Mail Address',\n        'addNewCustomer': 'Add New Customer',\n        'add': 'Add',\n        'cancel': 'Cancel',\n        'update': 'Update',\n        'delete': 'Delete',\n        'addingNewUser': 'Adding New User',\n        // industries\n        'industry': 'Industry',\n        'Residential buildings': 'Residential buildings',\n        'Commercial buildings': 'Commercial buildings',\n        'Hospitals': 'Hospitals',\n        'Hotels': 'Hotels',\n        'Agriculture': 'Agriculture',\n        'Food and drinks': 'Food and drinks',\n        'Oils and fuels': 'Oils and fuels',\n        'Emergency services': 'Emergency services',\n        'Utility service provider': 'Utility service provider',\n        // liquid types\n        'water': 'Water',\n        'diesel': 'Diesel',\n        'fertilizer': 'Fertilizer',\n\n        // alerts and heartbeat\n        \"levelAlert\" : \"Level Alert\",\n        \"heartbeat\" : \"Device Health\",\n        \"Level OK\" : \"Level OK\",\n        \"Level Below\" : \"Level Below\",\n        \"Connected\" : \"Connected\",\n        \"Not Connected\" : \"Not Connected\",\n    },\n    'es': {\n        // Tank properties\n        'tankName': 'Tank Name',\n        'buildingName': 'Building Name',\n        'customer': 'Customer',\n        'volume': 'Volume',\n        'leftInTank': 'Left In Tank',\n        'lastUpdate': 'Last update',\n        'capacity': 'Capacity',\n        'liquid': 'Liquid',\n        'sensorLength': 'Sensor Length',\n        'sensor': 'La Sensora',\n        // Tank properties\n\n        'tankLocation': 'Tank Location',\n        'tanksLocations': 'Tanks Locations',\n        'volumeHistory': 'Volume History',\n\n        // ranges\n        'Last 6H': 'Last 6H',\n        'Last 12H': 'Last 12H',\n        'Last 24H': 'Last 24H',\n        'Last 2 Days': 'Last 2 Days',\n        'Last Week': 'Last Week',\n        'Select Range': 'Select Range',\n        'Custom Range': 'Custom Range',\n        'latestData': 'Latest Data',\n        // ranges\n\n        'selectEn': 'en - Inglés',\n        'selectEs': 'es - Español',\n        'logOut': 'Cerrar sesión',\n        'customerName': 'Nombre del cliente',\n        'mailAddress': 'Mail Address',\n        'addNewCustomer': 'Agregar nuevo cliente',\n        'add': 'Añadir',\n        'cancel': 'Cancelar',\n        'update': 'Actualización',\n        'delete': 'Borrar',\n        'addingNewUser': 'Agregando nuevo usuario',\n        // industries\n        'industry': 'Industria',\n        'Residential buildings': 'Edificios residenciales',\n        'Commercial buildings': 'Edificios comerciales',\n        'Hospitals': 'Hospitales',\n        'Hotels': 'Hoteles',\n        'Agriculture': 'Agricultura',\n        'Food and drinks': 'Alimentos y bebidas',\n        'Oils and fuels': 'Aceites y combustibles',\n        'Emergency services': 'Servicios de emergencia',\n        'Utility service provider': 'Proveedor de servicios públicos',\n        // liquid\n        'water': 'Agua',\n        'diesel': 'Diesel',\n        'fertilizer': 'Fertilizante',\n\n    }\n}\n\n","import { Cookies } from 'react-cookie';\nimport { dictionary } from 'app/lang/dic.js';\n\nconst langKey = 'lang';\n\nexport const getLang = () => {\n    let cookie = new Cookies();\n    let lang = cookie.get(langKey);\n    if (lang && (lang !== 'en' || lang !=='es')) {\n        return lang;\n    }\n    return 'en';\n}\n\nexport const setLang = (lang) => {\n    let cookie = new Cookies();\n    cookie.set(langKey, lang);\n}\n\nexport const translate = (text) => {\n    let translated = dictionary[getLang()][text];\n    if (translated){\n        return translated\n    }\n    else{\n        return text + ' not fond in dic';\n    }\n}\n","import React, { Component } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LogInHelper } from \"../../app/logInHelper\";\nimport { getLang, setLang } from '../../app/lang/lang.js'\nclass HeaderLinks extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { lang: getLang() };\n  }\n\n  handleLogOut = () => {\n    let logIn = new LogInHelper();\n    logIn.logOut();\n    window.location.reload();\n  }\n\n  selectLang = (lang) => {\n    setLang(lang);\n    this.setState({ lang: lang });\n  }\n\n  render() {\n/*\n    let notificationList = new NotificationHelper().get();\n    const notification = (\n      <div style={{color:'with'}}>\n        <i className=\"fa fa-globe\" />\n        <b className=\"caret\" />\n        <span className=\"notification\">{notificationList.length !== 0 ? notificationList.length:\"\"}</span>\n        <p>Notification</p>\n      </div>\n    );\n*/\n    return (\n      <div>\n        <Nav>\n          {/*\n          <NavItem eventKey={1} href=\"#\">\n            <i className=\"fa fa-dashboard\" />\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          \n          \n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          */\n          /*\n          <NavItem eventKey={3} href=\"#\">\n            <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p>\n          </NavItem>\n          */}\n        </Nav>\n        <Nav pullRight>\n          {/*\n          <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          \n            <NavDropdown\n              eventKey={2}\n              title={<div style={{color:'white'}}>{this.state.lang}</div>}\n              id=\"basic-nav-dropdown-right\"\n            >\n              <MenuItem eventKey={2.1} onClick={() => this.selectLang('en')}>{translate('selectEn')}</MenuItem>\n              <MenuItem eventKey={2.2} onClick={() => this.selectLang('es')}>{translate('selectEs')}</MenuItem>\n            </NavDropdown>*/\n          }\n          {/* \n          <NavItem eventKey={2} href=\"#\">\n            <div style={{color:'white'}}>{getVersion()}</div>\n          </NavItem>          \n          <NavItem eventKey={3} href=\"#\" onClick={() => this.handleLogOut()}>\n            <div style={{color:'white'}}>{translate('logOut')}</div>\n          </NavItem>\n          */}\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default HeaderLinks;\n","import moment from 'moment'\nimport variables from '../assets/sass/lbd/_variables.scss'\nlet appIsready = false;\n\nexport function getVersion(){\n    return 'SW Version 2.3';\n}\n\nexport function appIsReady(ready){\n    appIsready = ready;\n}\n\nexport function isAppReady(){\n    return appIsready;\n}\n\nexport function getPrimaryColor() {\n    return variables.primaryColor;\n}\n\nexport function getSecondaryColor() {\n    return variables.secondaryColor;\n}\n\nexport function getMenuTextColor(){\n    return variables.menuTextColor;\n}\n\nexport function getBackgroundColor(){\n    return variables.backgroundColor;\n}\n\nexport function getPrimarySideColor(){\n    return variables.primarySideColor;\n}\n\nexport function getPrimaryColorStyle() {\n    return { color: getPrimaryColor() };\n}\n\nexport function getFormattedTime(time) {\n    return moment.utc(time - 5 * 60 * 60 * 1000).format('MM/DD-HH:mm');\n}\nexport function getDetailedFormattedTime(time) {\n    return moment.utc(time - 5 * 60 * 60 * 1000).format('hh:mm a Do of MMMM YYYY');\n}\n\nexport function isMobile() { \n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function isIos(){\n    if( /iPhone|iPad|iPod/i.test(navigator.userAgent) ) {\n        return true;\n    }\n    else{\n        return false;\n    }}","import React, { Component } from \"react\";\n\nimport {getPrimaryColor} from '../../app/adminHelper'\n\nexport class Card extends Component {\n  render() {\n    let colorStyle = {color:getPrimaryColor()};\n    if (this.props.color){\n      colorStyle = {color:this.props.color};\n    }\n    return (\n      <div className={\"card\" + (this.props.plain ? \" card-plain\" : \"\")}>\n        <div className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")} >\n          <h4 className=\"title\" style={colorStyle}><u><b>{this.props.title}</b></u></h4>\n          <p className=\"category\" style={colorStyle}>{this.props.category}</p>\n        </div>\n        <div\n          className={\n            \"content\" +\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\n          }\n        >\n          {this.props.content}\n\n          {/*<div className=\"footer\">*/}\n          <div>\n            {this.props.legend}\n            {/*this.props.stats != null ? <hr /> : \"\"*/}\n            <div className=\"stats\">\n              <i className={this.props.statsIcon} style={colorStyle}/> \n                <div style={colorStyle}>&nbsp;{this.props.stats}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import axios from \"axios\";\nimport { getTankSettingsUri } from \"app/restHelper.jsx\";\nimport { AppLogger } from \"app/Logger\";\n\nlet tankList = [];\n\nexport default class TanksTable {\n\n    getTanks() {\n        return tankList;\n    }\n\n    getCustomerTanks(customersId) {\n        let debug = false;\n        let tanks = [];\n        for (let index in tankList) {\n            if (tankList[index].customer === customersId ||\n                customersId === \"admin\") {\n                tanks.push(tankList[index]);\n                if (debug === true) {\n                    break;\n                }\n            }\n        }\n\n        return tanks;\n    }\n\n    getTank(imei) {\n        for (let index in tankList) {\n            if (tankList[index].imei === imei) {\n                return tankList[index];\n            }\n        }\n\n        return null;\n    }\n\n    getImeiFromUrl = (str) => {\n        for (let index in tankList) {\n            if (str.search(tankList[index].imei) !== -1) {\n                return tankList[index].imei;\n            }\n        }\n\n        return null;\n    }\n\n    getTankName(imei) {\n        return this.getTank(imei).name;\n    }\n\n    getCustomerId(imei) {\n        return this.getTank(imei).customer;\n    }\n\n    getCapacity(imei) {\n        return this.getTank(imei).capacity;\n    }\n\n    getLiquidType(imei){\n        return this.getTank(imei).liquid_type;\n    }\n\n\n    hasTanks(customerId) {\n        for (let index in tankList) {\n            if (tankList[index].customer === customerId) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    addTank = (callBack, formState, customerId) => {\n        let postJson = {\n            'imei': formState.imei,\n            'customer': customerId,\n            'iccid': formState.iccid,\n            'liquid_type': formState.liquid_type,\n            'capacity': formState.capacity,\n            'high': formState.high,\n            'sensor_type':formState.sensor_type,\n            'heartbeat_timeout': formState.heartbeat_timeout,\n            'sampling_interval': formState.sampling_interval,\n            'phone': formState.phone,\n            'name': formState.name + '--building--' + formState.building,\n            'level_alerts': formState.level_alerts\n        };\n\n        axios.post(getTankSettingsUri(), postJson).then(response => {\n            console.log(AppLogger( \"adding new tank succedded\"));\n            callBack && callBack(true);\n        }).catch(error => {\n            console.log(AppLogger( error));\n            callBack && callBack(false);\n        });\n    }\n\n    updateTank = (callBack, tank, customerId) => {\n        let postJson = {\n            'imei': tank.imei,\n            'customer': customerId,\n            'iccid': tank.iccid,\n            'liquid_type': tank.liquid_type,\n            'capacity': tank.capacity,\n            'high': tank.high,\n            'sensor_type':tank.sensor_type,\n            'heartbeat_timeout': tank.heartbeat_timeout,\n            'sampling_interval': tank.sampling_interval,\n            'phone': tank.phone,\n            'name': tank.name + '--building--' + tank.building,\n            'level_alerts': tank.level_alerts\n        };\n\n        axios.put(getTankSettingsUri() + \"/\" + tank.imei, postJson).then(response => {\n            console.log(AppLogger(\"updating tank succedded\"));\n            callBack && callBack(true);\n        }).catch(error => {\n            console.log(AppLogger( error));\n            callBack && callBack(false);\n        }\n        );\n    }\n\n    deleteTank = (imei, callBack) => {\n        let url = getTankSettingsUri() + \"/\" + imei;\n        console.log(AppLogger( \"deleteTank \" + url));\n\n        axios\n            .delete(url)\n            .then(response => {\n                console.log(AppLogger(\"deleting tank succedded\"));\n                callBack && callBack();\n            })\n            .catch(error => console.log(AppLogger( error)));\n    }\n\n    readTanks(callBack) {\n        let uri = getTankSettingsUri();\n        console.log(AppLogger( \"readTanks \" + uri));\n        axios.get(uri)\n            .then(response => {\n                tankList = response.data;\n                //update building\n                for (let index in tankList){\n                    let names = tankList[index].name.split(\"--building--\");\n                    if (names.length === 1){\n                        tankList[index].building = '';\n                    }\n                    else{\n                        tankList[index].name = names[0];\n                        tankList[index].building = names[1];\n                    }\n                }\n                console.log(AppLogger( \"Got tanks list - \" + tankList.length));\n                callBack && callBack();\n            })\n            .catch(error => console.log(AppLogger( error)));\n    }\n\n    start(callBack, forceRead) {\n        console.log(AppLogger( \"start \" + forceRead));\n\n        if (forceRead || tankList.length === 0) {\n            tankList = [];\n            this.readTanks(callBack);\n        }\n        else {\n            callBack && callBack();\n        }\n    }\n}","import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nexport class StatsCard extends Component {\n  render() {\n    return (\n      <div className=\"card card-stats\">\n        <div className=\"content\">\n          <Row>\n            <Col xs={12}>\n              <div className=\"numbers\">\n                <center>\n                  {this.props.bigIcon}\n                  {this.props.statsText}\n                </center>\n              </div>\n              <div>\n                {this.props.statsValue}\n              </div>\n\n            </Col>\n          </Row>\n          <div className=\"footer\">\n            <hr />\n            <div className=\"stats\">\n              {this.props.statsIcon} {this.props.statsIconText}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StatsCard;\n","import TanksTable from \"./db/TanksTable\";\nimport { LogInHelper } from \"./logInHelper\";\n\nexport default class NotificationHelper {\n\n    constructor() {\n        let tt = new TanksTable();\n        tt.start(null, false);\n    }\n\n    getLevelNotifications() {\n        let notifications = [];\n        // scan for notifications\n        let customerId = new LogInHelper().getLoggedInCustomerId();\n        let tanks = new TanksTable().getCustomerTanks(customerId);\n        for (let tankIndex in tanks) {\n            let tanksNotifications = this.getLevelNotificationsOnTank(tanks[tankIndex]);\n            tanksNotifications.map((notification)=>notifications.push(notification));\n        }\n        return notifications;\n    }\n\n    getLevelNotificationsOnTank(tank){\n        let notifications = [];\n        let lowestAlert = 100;\n        for (let alertIndex in tank.level_alerts) {\n            let level_alerts = tank.level_alerts[alertIndex];\n            if (level_alerts.status === 'on') {\n                if (lowestAlert > level_alerts.at_level){\n                    lowestAlert = level_alerts.at_level;\n                }\n                //let alertObj = { name: tank.name, level: level_alerts.at_level }\n                //notifications.push(alertObj);\n            }\n        }\n\n        if (lowestAlert !== 100){\n            let alertObj = { name: tank.name, level: lowestAlert }\n            notifications.push(alertObj);\n        }\n        \n        return notifications;\n    }\n\n    getHeartBeatNotification() {\n        let notifications = [];\n        // scan for notifications\n        let customerId = new LogInHelper().getLoggedInCustomerId();\n        let tanks = new TanksTable().getCustomerTanks(customerId);\n        for (let tankIndex in tanks) {\n            let tanksNotifications = this.getHeartBeatNotificationForTank(tanks[tankIndex]);\n            tanksNotifications.map((notification)=>notifications.push(notification));\n        }\n        return notifications;\n    }\n\n    getHeartBeatNotificationForTank(tank){\n        let notifications = [];\n        if (tank.heartbeat_ok !== true){\n            notifications.push({ name: tank.name });\n        }\n        return notifications;\n    }\n\n}","import axios from \"axios\";\nimport { getTankReadingUri, getTankReadingStartEndUri } from \"app/restHelper.jsx\";\nimport { AppLogger } from \"app/Logger\";\nimport TanksTable from \"app/db/TanksTable\"\nimport { LogInHelper } from \"app/logInHelper\";\n\nlet lastLevelMonitoring = [];\nlet numberOfTanks = 0;\nlet lastReadingTime = 0;\n\nexport default class TanksReading {\n\n    constructor() {\n        this.customer = null;\n        this.callBack = null;\n    }\n\n    getLastReadingTime = () => {\n        return lastReadingTime;\n    }\n\n    getSortReading(list, category) {\n        let tt = new TanksTable();\n        if (category === \"name\") {\n            return list.sort((a, b) =>\n                tt.getTankName(a.imei) > tt.getTankName(b.imei) ? 1 : -1);\n        }\n        else if (category === \"capacity\") {\n            return list.sort((a, b) =>\n                tt.getCapacity(a.imei) > tt.getCapacity(b.imei) ? 1 : -1);\n        }\n        else if (category === \"liquid_type\") {\n            return list.sort((a, b) =>\n                tt.getLiquidType(a.imei).toLowerCase() > tt.getLiquidType(b.imei).toLowerCase() ? 1 : -1);\n        }\n        else {\n            return null;\n        }\n    }\n\n    getLevelMonitoring(category) {\n        return this.getSortReading(lastLevelMonitoring, category);\n    }\n\n    getLevelMonitoringForTank(imei) {\n        let index = 0;\n        for (index in lastLevelMonitoring) {\n            if (lastLevelMonitoring[index].imei === imei) {\n                return lastLevelMonitoring[index];\n            }\n        }\n        return null;\n    }\n\n    updateTankReadings = (data) => {\n        if (data !== null) {\n            if (this.from === null) {\n                let tt = new TanksTable();\n                console.log(AppLogger( \"Readings from \" + tt.getTankName(data.data.imei)));\n                console.log(AppLogger( \"Sample \" + data.data.sample_level + \" Actual \" + data.data.actual_level +\n                    \" IMEI \" + data.data.imei + \" server time \" + data.data.server_time + \" tank time \" + data.data.tank_time));\n                lastLevelMonitoring.push(data.data);\n                if (lastReadingTime < data.data.server_time) {\n                    lastReadingTime = data.data.server_time;\n                }\n            }\n            else {\n                let range = data.data;\n                range['imei'] = new TanksTable().getImeiFromUrl(data.request.responseURL);\n                this.fromToLevelMonitoring.push(range);\n            }\n        }\n        this.numberOfreadings += 1;\n        // call after all reading done\n        if (numberOfTanks === this.numberOfreadings) {\n            //console.log(AppLogger( \"calling callback\");\n            if (this.from === null) {\n                this.callBack && this.callBack();\n            }\n            else {\n                let sorted = this.fromToLevelMonitoring.sort((a, b) => parseInt(a.imei, 16) - parseInt(b.imei, 16));\n                this.callBack && this.callBack(sorted);\n            }\n        }\n    }\n\n    tanksInfoReady = () => {\n        let tanks = new TanksTable().getCustomerTanks(this.customer);\n        numberOfTanks = tanks.length;\n        this.numberOfreadings = 0;\n\n        for (let index in tanks) {\n            let uri = getTankReadingUri(tanks[index].imei, true);\n            if (this.from != null && this.to != null && this.tank != null) {\n                numberOfTanks=1;\n                if (this.tank.imei === tanks[index].imei) { // get the readings only for the selected tank\n                    uri = getTankReadingStartEndUri(tanks[index].imei, this.from, this.to);\n                }\n                else{\n                    continue;\n                }\n            }\n            console.log(AppLogger( \"level monitoring uri = \" + uri));\n            axios\n                .get(uri)\n                .then(response => this.updateTankReadings(response))\n                .catch(error => {\n                    console.log(AppLogger( \"TanksReadings \" + error));\n                    this.updateTankReadings(null);\n                });\n        }\n    }\n\n    setClassParams(callBack, from, to, tank) {\n        this.callBack = callBack;\n        this.from = from;\n        this.to = to;\n        this.customer = new LogInHelper().getLoggedInCustomerId();\n        this.tank = tank\n        let tt = new TanksTable();\n        tt.start(this.tanksInfoReady, false);\n    }\n\n    getLastReading(callBack) {\n        console.log(AppLogger( \"Asking for last readings\"));\n        lastLevelMonitoring = [];\n        this.setClassParams(callBack, null, null, null);\n    }\n\n    getReadingFromTo(callBack, from, to, tank) {\n        console.log(AppLogger( \"Asking for from to readings\"));\n        this.fromToLevelMonitoring = [];\n        this.setClassParams(callBack, from, to, tank);\n    }\n}","import React from 'react';\nimport { Alert } from \"react-bootstrap\";\n\nexport function levelAlertView(alerts) {\n    if (alerts.length === 0){\n        return null;\n    }\n\n    return (\n        <div>\n            {alerts.map((alert, index) => {\n                return (\n                    <Alert bsStyle=\"danger\" className=\"alert-with-icon\" key={index}>\n                        <center>\n                            <span data-notify=\"icon\" className=\"pe-7s-bell\" />\n                            <span data-notify=\"message\">Level is below {alert.level}% on Tank: <q>{alert.name}</q></span>\n                        </center>\n                    </Alert>);\n            })}\n        </div>\n    )\n}\n\nexport function heartBeatView(hearBeatAlerts) {\n    if (hearBeatAlerts.length === 0){\n        return null;\n    }\n\n    return (\n        <div>\n            {hearBeatAlerts.map((heartBeatAlert,index) => {\n                return (\n                    <Alert bsStyle=\"danger\" className=\"alert-with-icon\" key={index}>\n                        <center>\n                            <span data-notify=\"icon\" className=\"pe-7s-bell\" />\n                            <span data-notify=\"message\">Tank: <q>{heartBeatAlert.name}</q> is not responding</span>\n                        </center>\n                    </Alert>);\n            })}\n        </div>)\n}\n","import axios from \"axios\";\nimport { getCustomersUri } from \"app/restHelper.jsx\";\nimport { AppLogger } from \"app/Logger\";\n//import { LogInHelper } from \"app/logInHelper\";\n\nlet customerList = [];\n\nexport default class CustomersTable {\n\n    getCustomers() {\n        return customerList.sort((a, b) =>\n            a.name.toLowerCase() > b.name.toLowerCase() ? 1 : 0);\n    }\n/*\n    getCustomersIds() {\n        let customersNames = [];\n        let customer = new LogInHelper().getLoggedInCustomer();\n        if (customer === 'admin') { // get all customers\n            for (let index in customerList) {\n                customersNames.push(customerList[index].id);\n            }\n        }\n        else {\n            for (let index in customerList) {\n                if (customerList[index].name === customer) {\n                    customersNames.push(customerList[index].id);\n                    break;\n                }\n            }\n        }\n\n        return customersNames;\n    }\n*/\n    getCustomer(customerId) {\n        for (let index in customerList) {\n            if (customerList[index].id === customerId) {\n                return customerList[index];\n            }\n        }\n\n        return null;\n    }\n\n    getCustomerName(customerId) {\n        let customer = this.getCustomer(customerId);\n        if (customer !== null){\n            return customer.name;\n        }\n        else{\n            return \"\";\n        }\n    }\n\n    addCustomerToCustomers = (customer) =>{\n        // check if the customer is in the table\n        for (let index in customerList){\n            if (customerList[index].name === customer.name){\n                return;\n            }\n        }\n        \n        customerList.push(customer);\n\n    }\n\n    readCustomers(callBack) {\n        let uri = getCustomersUri();\n        console.log(AppLogger( \"Customers \" + uri));\n        axios\n            .get(uri)\n            .then(response => {\n                console.log(AppLogger( \"Got customers list \" + response.data.length));\n                for (let index = 0; index < response.data.length; index++) {\n                    this.addCustomerToCustomers(response.data[index]);\n                }\n                callBack && callBack();\n            })\n            .catch(error => console.log(AppLogger( error)));\n    }\n\n    addNewCustomer(name, industry, mailingList, callBack) {\n        console.log(AppLogger( \"add new customer \" + name));\n\n        // check if name is in the list\n        for (let index in customerList) {\n            if (customerList[index].name.toLowerCase() === name.toLowerCase()) {\n                callBack && callBack(\"Customer \" + name + \" already exist\");\n                return;\n            }\n        }\n\n        axios.post(getCustomersUri(),\n            { \"name\": name, \"industry\": industry, \"mailing_list\": mailingList })\n            .then(response => {\n                console.log(AppLogger(\"adding new customer succedded\"));\n                callBack && callBack(null);\n            })\n            .catch(error => {\n                console.log(AppLogger( error));\n                callBack && callBack(\"failed to create new customer\");\n            });\n    }\n\n    updateCustomer(customer,callBack) {\n        let url = getCustomersUri() + \"/\" + customer.id;\n        console.log(AppLogger( \"updating customer \" + url));\n\n        let json = { \"name\": customer.name, \"industry\": customer.industry, \"mailing_list\": customer.mailing_list };\n\n        axios\n            .put(url,json)\n            .then(response => {\n                console.log(AppLogger( \"updating customer succedded\"));\n                callBack && callBack(null);\n            })\n            .catch(error => {\n                console.log(AppLogger( error));\n                callBack && callBack(\"failed to create update customer\");\n            });\n    }\n\n    deleteCustomer(id, callBack) {\n        let url = getCustomersUri() + \"/\" + id;\n        console.log(AppLogger( \"deleteCustomer \" + url));\n\n        axios\n            .delete(url)\n            .then(response => {\n                console.log(AppLogger( \"deleting customer succedded\"));\n                callBack && callBack();\n            })\n            .catch(error => console.log(AppLogger( error)));\n    }\n\n    start(callBack, forceRead) {\n        console.log(AppLogger(\"start \" + forceRead));\n        if (forceRead || customerList.length === 0) {\n            customerList = [];\n            this.readCustomers(callBack);\n        }\n        else {\n            callBack && callBack(); \n        }\n    }\n}","import React, { Component } from \"react\";\nimport { interpolateRgb } from 'd3-interpolate';\nimport LiquidFillGauge from 'react-liquid-gauge';\nimport { color } from 'd3-color';\nimport { getPrimaryColor } from 'app/adminHelper'\n\nconst timeout = 5;\nexport class TankCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    };\n\n    if (this.props.asAlerts===false){\n\n      let tankColor = '#00A4D5';\n      this.startColor = tankColor;\n      this.endColor =tankColor;\n      this.textColor = tankColor;\n    }\n    else{\n      this.startColor = 'red';\n      this.endColor = 'red';\n      this.textColor = 'red';\n    }\n\n    this.tick = this.tick.bind(this);\n\n    this.timeout = timeout;\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.tick, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    this.timeout -= 1;\n    if (this.timeout === 0) {\n      this.setState({ value: 0 });\n    }\n\n    if (this.timeout === -1) {\n      this.timeout = timeout;\n      this.setState({ value: this.props.value });\n    }\n  }\n\n  getTankName() {\n    if (this.props.tank) {\n      return this.props.tank.name;\n    }\n\n    return null;\n  }\n\n  getRadiusFromHeight1() {\n    let height = this.props.height.substring(0, this.props.height.length - 1);\n    let factor = 3.5;\n    if (window.screen.width <= 330) {\n      factor = 2.2;\n    }\n    else if (window.screen.width <= 360) {\n      factor = 2.8;\n    }\n    else if (window.screen.width <= 375) {\n      factor = 2.7;\n    }\n\n    let retVal = parseFloat(height, 10) * factor\n    //console.log(AppLogger('retVal =' + retVal);\n    return retVal;\n  }\n\n  getRadiusFromHeight() {\n    //console.log(AppLogger('width  = ' + window.innerWidth);\n    //console.log(AppLogger('Height = ' + window.innerHeight);\n    let height = this.props.height.substring(0, this.props.height.length - 1);\n    //console.log(AppLogger('height ' + height);\n    //console.log(AppLogger('innerHeight ' + window.innerHeight);\n    return window.innerHeight * height / 350;\n\n    //if (window.innerWidth <= 375){\n    //  return 100;\n    // }\n    // else{\n    //   return 140;\n    // }\n  }\n\n  renderTank() {\n    const radius = this.getRadiusFromHeight();\n    //const radius = 150;\n    const interpolate = interpolateRgb(this.startColor, this.endColor);\n    const fillColor = interpolate(this.state.value / 100);\n    const gradientStops = [\n      {\n        key: '0%',\n        stopColor: color(fillColor).darker(0.5).toString(),\n        stopOpacity: 1,\n        offset: '0%'\n      },\n      {\n        key: '50%',\n        stopColor: fillColor,\n        stopOpacity: 0.75,\n        offset: '50%'\n      },\n      {\n        key: '100%',\n        stopColor: color(fillColor).brighter(0.5).toString(),\n        stopOpacity: 0.5,\n        offset: '100%'\n      }\n    ];\n\n    return (\n      <div>\n        <LiquidFillGauge\n          style={{ margin: '0 auto'/*,height:this.props.height*/ }}\n          width={radius * 2}\n          height={radius * 2}\n          value={this.state.value}\n          percent=\"%\"\n          textSize={1}\n          textOffsetX={0}\n          textOffsetY={0}\n          textRenderer={(props) => {\n            const value = Math.round(props.value);\n            const radius = Math.min(props.height / 2, props.width / 2);\n            const textPixels = (props.textSize * radius / 2);\n            const valueStyle = {\n              fontSize: textPixels\n            };\n            const percentStyle = {\n              fontSize: textPixels * 0.6\n            };\n\n            return (\n              <tspan>\n                <tspan className=\"value\" style={valueStyle}>{value}</tspan>\n                <tspan style={percentStyle}>{props.percent}</tspan>\n              </tspan>\n            );\n          }}\n          riseAnimation\n          waveAnimation\n          waveFrequency={1}\n          waveAmplitude={4}\n          gradient\n          gradientStops={gradientStops}\n          circleStyle={{\n            fill: fillColor\n          }}\n          waveStyle={{\n            fill: fillColor\n          }}\n          textStyle={{\n            fill: this.textColor,\n            fontFamily: 'Arial'\n          }}\n          waveTextStyle={{\n            fill: color('#fff').toString(),\n            fontFamily: 'Arial'\n          }}\n          onClick={() => {\n            //this.setState({ value: Math.random() * 100 });\n          }}\n        />\n        <center><h3 style={{color:this.startColor}}><b>{this.props.volume}</b></h3></center>\n      </div>);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderTank()}\n      </div>\n    );\n  }\n};\n\nexport default TankCard;\n","import React from 'react';\n\nimport TanksTable from \"../../app/db/TanksTable.jsx\"\nimport CustomersTable from \"../../app/db/CustomersTable.jsx\"\nimport { LogInHelper } from \"app/logInHelper\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { translate } from \"../../app/lang/lang\";\nimport TankCard from \"components/App/TankCard.jsx\"\nimport { getDetailedFormattedTime } from \"app/adminHelper.jsx\"\nimport { Col, FormControl, Table } from \"react-bootstrap\";\nimport NotificationHelper from \"../../app/notificationHelper\"\nimport { getPrimaryColor } from '../../app/adminHelper.jsx';\n\nexport function renderTanks(readings) {\n    let width = 6;\n    if (readings.length === 1){\n        width = 12;\n    }\n    return (\n        readings.map((reading, index) => {\n\n            let tt = new TanksTable();\n            let tank = tt.getTank(reading.imei);\n            if (tank === null) {\n                return null;\n            }\n            let tankName = tank.name;\n\n            let volume = parseInt(tank.capacity * reading.actual_level / 100, 10) + \" L\";\n\n            let nh = new NotificationHelper();\n\n            let levelAlerts = nh.getLevelNotificationsOnTank(tank);\n            //let hearBeatAlerts = nh.getHeartBeatNotificationForTank(tank);\n            //let asAlert = (levelAlerts.length !==0 || hearBeatAlerts.length !==0)?true:false\n            let asAlert = (levelAlerts.length !== 0) ?true:false\n            let titleColor = getPrimaryColor();\n            if (asAlert){\n                titleColor = 'red'\n            }\n            return (\n                <Col xs={12} sm={width} key={index} >\n                    <Card \n                        hCenter={true}\n                        id=\"chartHours\"\n                        title={tankName} color={titleColor}\n                        stats={renderTanksParams(tank, reading)}\n                        content={<TankCard\n                            value={reading.actual_level}\n                            height={\"40%\"}\n                            volume={volume}\n                            asAlerts={asAlert}\n                        />\n                        }\n                    />\n                </Col>\n            );\n        }\n        ));\n}\n\nexport function isTankFiltered(tank, filterStr) {\n    if (filterStr !== \"\") {\n        let tt = new TanksTable();\n        let customer = tt.getCustomerId(tank.imei);\n        let customerName = new CustomersTable().getCustomerName(customer);\n\n        if (tank.imei.search(filterStr) === -1 &&\n            tank.name.search(filterStr) === -1 &&\n            customerName.search(filterStr) === -1 &&\n            tank.capacity.toString().search(filterStr) === -1 &&\n            tank.liquid_type.search(filterStr) === -1)\n            return true;\n    }\n    return false;\n}\n\nfunction getCustomer(tank) {\n    if (new LogInHelper().isAdmin()) {\n        return new CustomersTable().getCustomerName(tank.customer);\n    }\n    else {\n        return null;\n    }\n}\n\nfunction renderTableRow(t1, t2) {\n    return (\n        <tr>\n            <td><center>{t1}</center></td>\n            <td><center>{t2}</center></td>\n        </tr>\n    )\n}\nfunction renderTableRowForAlert(t1, t2, color) {\n    return (\n        <tr>\n            <td style={{color:color}}><center>{t1}</center></td>\n            <td style={{color:color}}><center>{t2}</center></td>\n        </tr>\n    )\n}\n\nexport function renderTanksParams(tank, readings) {\n\n    let isAdmin = new LogInHelper().isAdmin();\n\n    let nh = new NotificationHelper();\n\n    let levelAlerts = nh.getLevelNotificationsOnTank(tank);\n    let hearBeatAlerts = nh.getHeartBeatNotificationForTank(tank);\n    return (\n        <div>\n            <Table striped bordered condensed hover>\n                <tbody>\n                    {renderTableRow(translate(\"tankName\"), tank.name)}\n                    {renderTableRow(translate(\"buildingName\"), tank.building)}\n                    {getCustomer(tank) !== null &&\n                        renderTableRow(\"Customer\", getCustomer(tank))\n                    }\n                    {renderTableRow(translate(\"capacity\"), tank.capacity + \" L\")}\n                    {readings !== null &&\n                        renderTableRow(translate(\"volume\"), parseInt(tank.capacity * readings.actual_level / 100, 10) + \" L\")\n                    }\n                    {readings !== null &&\n                        renderTableRow(translate(\"leftInTank\"), readings.actual_level + \"%\")\n                    }\n                    {readings !== null &&\n                        renderTableRow(translate(\"lastUpdate\"), getDetailedFormattedTime(readings.server_time))\n                    }\n                    {renderTableRow(translate(\"liquid\"), translate(tank.liquid_type))}\n                    {isAdmin && renderTableRow(translate(\"sensorLength\"), tank.sensor_type + \"M\")}\n                    {renderTableRowForAlert(translate(\"levelAlert\"), levelAlerts.length > 0 ? translate(\"Level Below\") + \" \" + levelAlerts[0].level + \"%\" : translate(\"Level OK\"), levelAlerts.length>0?'red':'black')}\n                    {isAdmin && renderTableRowForAlert(translate(\"heartbeat\"), hearBeatAlerts.length > 0 ? translate(\"Not Connected\") : translate(\"Connected\"), levelAlerts.length>0?'red':'black')}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport function renderFilterTanksCard(caller) {\n    //let logInHelper = new LogInHelper();\n    ///if (logInHelper.isAdmin() === false) {\n    //    return null\n    //}\n\n    return (\n        <Col md={4}>\n            <Card\n                id={\"filterTanks\"}\n                title=\"Filter Tanks\"\n                hCenter={true}\n                content={\n                    <FormControl\n                        type=\"text\"\n                        value={caller.state.value}\n                        placeholder=\"Tank / Customer / Capacity / IMEI\"\n                        onChange={(e) => caller.setState({ filterStr: e.target.value })}\n                    />\n                }\n            />\n        </Col>\n    );\n}","import { translate } from \"../../app/lang/lang\";\nimport TanksReading from \"../../app/db/TankReadings\";\nimport { AppLogger } from \"../../app/Logger\";\n\nexport default class RangeHelper {\n    constructor() {\n        this.ranges = ['Last 6H','Last 12H', 'Last 24H', 'Last 2 Days', 'Select Range'];\n        this.rangesValues = [6, 12, 24, 24 * 2, null];\n    }\n\n    getFirstRangeInHours = () =>{\n        return this.rangesValues[0];\n    }\n\n    getRanges = () => {\n        return this.ranges;\n    }\n\n    getRangeInHour = (index) => {\n        return this.rangesValues[index];\n    }\n\n    getSelectedString = (index) => {\n        if (index === this.ranges.length - 1) {\n            return translate(\"Custom Range\");\n        }\n        else {\n            return translate(this.ranges[index]);\n        }\n    }\n\n    getRangeForHourse = (timeInHours, callback, forClass) => {\n        let tr = new TanksReading();\n        let from = tr.getLastReadingTime() - (timeInHours * 60 * 60 * 1000);\n        let to = tr.getLastReadingTime();\n        console.log(AppLogger( from + \" \" + to));\n        this.callback = callback;\n        tr.getReadingFromTo(this.rangeReady, from, to, forClass);\n    }\n\n    getRangeFromTo = (from, to, callback, tank) => {\n        this.callback = callback;\n        new TanksReading().getReadingFromTo(this.rangeReady, from, to, tank);\n    }\n\n    rangeReady = (range) => {\n        if (range.length !== 0) {\n            this.callback && this.callback(range);\n        }\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { DateRangePickerShape, DateRangePickerPhrases, DateRangePicker, START_DATE, END_DATE, VERTIVAL_ORIENTATION, ANCHOR_LEFT } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n//import { AppLogger } from '../../app/Logger';\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // app props\n  onHide: null,\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: new moment(),\n  initialEndDate: new moment(),\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: null,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: VERTIVAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() { },\n  onNextMonthClick() { },\n  onClose() { },\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 0,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: () => false,\n  //isOutsideRange: day => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: date => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n      startDate: props.initialStartDate,\n      endDate: props.initialEndDate,\n      startDateId: 0\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  onDatesChange({ startDate, endDate }) {\n    const { stateDateWrapper } = this.props;\n    this.setState({\n      startDate: startDate && stateDateWrapper(startDate),\n      endDate: endDate && stateDateWrapper(endDate),\n    });\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n\n  getNumberOfMonth = () => {\n    if (window.innerWidth <= 994) {\n      return 1;\n    }\n    else {\n      return 2;\n    }\n  }\n\n  handelClose = (startDate) => {\n    if (startDate) {\n      this.props.onHide(this.state.startDate.toDate(), startDate.endDate.toDate());\n    }\n  }\n\n  render() {\n    const { focusedInput, startDate, endDate } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          numberOfMonths={this.getNumberOfMonth()}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={startDate}\n          endDate={endDate}\n          onClose={(startDate) => this.handelClose(startDate)}\n        />\n      </div>\n    );\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;","\nimport React from \"react\";\nimport { Modal, Button } from 'react-bootstrap'\nimport DateRangePickerWrapper from \"components/App/DateAndTime.jsx\";\nimport { MenuItem, DropdownButton } from 'react-bootstrap';\n\n\nclass DateAndTimeModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // create time array\n        this.timeArray = this.createTimeArray();\n\n        this.state = { startTime: \"00:00 AM\", endTime: \"24:00 PM\", startDate: new Date(), endDate: new Date() }\n    }\n\n    createTimeArray = () => {\n        let timeArray = [];\n        for (let hour = 0; hour < 24; hour++) {\n            let hourStr = \"\" + hour;\n            if (hour < 10) {\n                hourStr = \"0\" + hour;\n            }\n\n            timeArray.push(hourStr + \":00\");\n            timeArray.push(hourStr + \":30\");\n        }\n\n        return timeArray;\n\n    }\n    dateSelected = (start, end) => {\n        this.setState({ startDate: start, endDate: end });\n    }\n\n    closeModal = () => {\n        this.props.onHide(\n            this.state.startDate, this.state.endDate,\n            this.state.startTime, this.state.endTime);\n        this.setState({ startTime: \"00:00 AM\", endTime: \"24:00 PM\", startDate: new Date(), endDate: new Date() });\n    }\n\n    quickSelection = (time) => {\n        this.props.onHide(null, null, time, null);\n    }\n\n    render() {\n        return (\n            <Modal\n                {...this.props}\n                bsSize=\"small\"\n                aria-labelledby=\"contained-modal-title-sm\">\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-sm\">Date Range Selection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <DateRangePickerWrapper onHide={this.dateSelected}\n                        startDateId={\"2\"} endDateId={\"2\"} />\n                </Modal.Body>\n                <div>\n                    <center>\n                        Select Start & End Time\n                    </center>\n                    <p />\n                </div>\n                <div><center>\n                    <DropdownButton title={this.state.startTime} id=\"dropdown-size-medium\"\n                        onSelect={(e) => this.setState({ startTime: this.timeArray[e] })}>\n                        {this.timeArray.map((str, index) => {\n                            return <MenuItem key={index} eventKey={index}><strong>{str}</strong></MenuItem>;\n                        })}\n                    </DropdownButton>&nbsp;&nbsp;\n                    <DropdownButton title={this.state.endTime} id=\"dropdown-size-medium\"\n                        onSelect={(e) => this.setState({ endTime: this.timeArray[e] })}>\n                        {this.timeArray.map((str, index) => {\n                            return <MenuItem key={index} eventKey={index}><strong>{str}</strong></MenuItem>;\n                        })}\n                    </DropdownButton>\n                </center></div>\n                <p />\n                <Modal.Footer>\n                    <Button onClick={this.closeModal}>Select</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default DateAndTimeModal;\n\n","import React from \"react\";\nimport {\n    DropdownButton, MenuItem, ButtonGroup\n} from \"react-bootstrap\";\nimport TanksTable from \"../../app/db/TanksTable\";\nimport { LogInHelper } from \"../../app/logInHelper\";\n\nexport default class TanksSelection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTankName: null\n        };\n\n        let customerId = new LogInHelper().getLoggedInCustomerId();\n        this.tanks = new TanksTable().getCustomerTanks(customerId);\n    }\n\n    tankSelected = (index) => {\n\n        this.setState({ selectedTankName: this.tanks[index].name });\n        this.props.tankSelected && this.props.tankSelected(this.tanks[index]);\n    }\n\n    getTankName = () => {\n        if (this.state.selectedTankName === null) { // not set yet\n            return this.props.getSelectedTank().name\n        }\n        else {\n            return this.state.selectedTankName\n        }\n    }\n\n    render() {\n        let tankName = this.getTankName()\n        return (\n            <ButtonGroup>\n                <DropdownButton title={\"Select Tank - \" + tankName} bsStyle=\"primary\" style={{ margin: '3px' }} id=\"bg-nested-dropdown\">\n                    {\n                        this.tanks.map((tank, index) => {\n                            return (\n                                <MenuItem eventKey={index} key={index} onClick={() => this.tankSelected(index)}>{tank.name}</MenuItem>\n                            )\n                        })\n                    }\n                </DropdownButton>\n            </ButtonGroup >\n        )\n    }\n}","import React, { Component } from \"react\";\nimport RangeHelper from \"./../Dashboard/RangeHelper\";\nimport DateAndTimeModal from \"./DateAndTimeModal\";\nimport { ButtonToolbar, ButtonGroup, Button } from \"react-bootstrap\";\nimport { AppLogger } from \"../../app/Logger\";\nimport TanksSelection from \"./../../views/Admin/TanksSelection\"\n\nclass RangeView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { showDateAndTimeModal: false };\n    }\n\n    rangeSelected = (value) => {\n        console.log(AppLogger( \"rangeSelected \" + value));\n\n        let rangeInHour = new RangeHelper().getRangeInHour(value);\n        if (rangeInHour === null) {\n            this.setState({ showDateAndTimeModal: true });\n        }\n        else {\n            this.props.hoursSelected(rangeInHour, value);\n        }\n    }\n    getDate = (date, time) => {\n        let hour = parseInt(time.substring(0, 2), 10);\n        let minutes = parseInt(time.substring(3, 5), 10);\n        date.setHours(hour);\n        date.setMinutes(minutes);\n        return date;\n    }\n\n    dateAndTimeModalClose = (startDate = null, endDate = null, startTime = null, endTime = null) => {\n        if (startDate !== null && endDate !== null &&\n            startTime !== null && endTime !== null) {\n            let start = this.getDate(startDate, startTime);\n            let end = this.getDate(endDate, endTime);\n            this.props.rangeSelected(start.getTime(), end.getTime());\n        }\n        else {\n            this.props.hoursSelected(6, 0);\n        }\n\n        this.setState({ showDateAndTimeModal: false });\n    }\n\n    render() {\n        let ranges = new RangeHelper().getRanges();\n        return (\n            <div>\n                <ButtonToolbar>\n                    <ButtonGroup>\n\n                        <TanksSelection tankSelected={this.props.tankSelected}\n                            getSelectedTank={this.props.getSelectedTank} />\n                        <Button\n                            style={{ opacity: '0' }}>\n                            {\"spacer it\"}\n                        </Button>\n                    </ButtonGroup>\n                    <ButtonGroup>\n                        {\n                            ranges.map((range, index) => {\n                                return (\n                                    <Button\n                                        bsStyle=\"primary\"\n                                        value={index}\n                                        style={{ margin: '3px' }}\n                                        key={index}\n                                        onClick={() => this.rangeSelected(index)}>\n                                        {range}\n                                    </Button>\n                                )\n                            })\n                        }\n                    </ButtonGroup>\n                </ButtonToolbar>\n                <DateAndTimeModal show={this.state.showDateAndTimeModal} onHide={this.dateAndTimeModalClose} />\n            </div>);\n    }\n}\n\nexport default RangeView;\n","import React from 'react';\n//import { curveCatmullRom } from 'd3-shape';\nimport \"../../../node_modules/react-vis/dist/style.css\"\nimport { getFormattedTime } from \"app/adminHelper.jsx\"\nimport {\n    XAxis,\n    YAxis,\n    HorizontalGridLines,\n    VerticalGridLines,\n    FlexibleWidthXYPlot,\n    AreaSeries,\n    DiscreteColorLegend\n} from 'react-vis';\n\nexport default class VisGraph extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            crosshairValues: []\n        };\n        this.colors = ['87cefa', 'white', 'green', 'black', 'orange', 'grey'];\n    }\n\n    getData = (data) => {\n        if (this.props.maxPoints === undefined || this.props.maxPoints === null) {\n            return data;\n        }\n        else {\n            if (this.props.maxPoints > data.length) {\n                return data;\n            }\n            let stayIndex = parseInt(data.length / this.props.maxPoints, 10);\n            for (var i = data.length - 2; i > 0; i--) {\n                if (i % stayIndex !== 0) {\n                    data.splice(i, 1);\n                }\n            }\n            return data;\n        }\n    }\n\n    myFormatter = (t, i) => {\n        let formatedTime = getFormattedTime(t);\n        let splitted = formatedTime.split('-');\n\n        return (<tspan>\n            <tspan x=\"0\" dy=\"1em\">{splitted[0]}</tspan>\n            <tspan x=\"0\" dy=\"1em\">{splitted[1]}</tspan>\n        </tspan>);\n    }\n\n    getLegendItems = () => {\n        let items = [];\n        for (let index in this.props.data) {\n            let data = this.props.data[index];\n            if (data.length !== 0) {\n                if (data[0].tankName !== \"\") { // not a real tank, helper points\n                    let obj = { title: data[0].tankName, color: this.colors[index % this.colors.length] };\n                    items.push(obj);\n                }\n            }\n        }\n        return items;\n    }\n\n    getxValues = (tickTotal) => {\n        // get the data array\n        for (let index in this.props.data) {\n            let dataLen = this.props.data[index].length;\n            if (dataLen > 2) {\n                let ret = [];\n                let data = this.props.data[index];\n                let firstX = data[0].x - (data[0].x % 3600000) + 3600000;\n                let hours = parseInt((data[dataLen - 1].x - data[0].x - 1000 * 60) / 1000 / 60 / 60, 10);\n                let hoursJump = parseInt(hours / 6, 10);\n                let jumps = 3600000 * (hoursJump + 1);\n                if (tickTotal > 5) {\n                    jumps /= 2;\n                    if (data[0].x < firstX - jumps) {\n                        firstX -= jumps;\n                    }\n                }\n                else {\n                    if (hours > 12) {\n                        tickTotal += 1;\n                    }\n                }\n                for (let index = 0; index < tickTotal; index++) {\n                    ret.push(firstX + index * jumps);\n                }\n                return ret;\n            }\n        }\n        return null\n    }\n\n    render() {\n        let tickTotal = (window.innerWidth <= 994) ? 5 : 12;\n        let legenItems = this.getLegendItems();\n        let xValues = this.getxValues(tickTotal);\n        //const configuredCurve = curveCatmullRom.alpha(0.5);\n        return (\n            <div>\n                <FlexibleWidthXYPlot\n                    height={360}\n                    margin={{ left: 60 }}>\n                    <DiscreteColorLegend\n                        items={legenItems}\n                        orientation=\"horizontal\" />\n                    <HorizontalGridLines style={{ stroke: '#B7E9ED' }} />\n                    <VerticalGridLines style={{ stroke: '#B7E9ED' }} />\n                    <XAxis title=\"\" tickValues={xValues} tickFormat={this.myFormatter}\n                        style={{\n                            line: { stroke: '#ADDDE1' },\n                            ticks: { stroke: '#ADDDE1' },\n                            text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600 }\n                        }} />\n                    <YAxis title=\"\" tickTotal={15} tickFormat={(v) => v.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \"L\"} style={{ size: 10 }} />\n\n                    {this.props.data.map((data, index) => {\n                        let strokeColor = 'blue';\n                        if (index !== 0) {\n                            strokeColor = 'white';\n                        }\n                        return (\n                            <AreaSeries\n                                key={index}\n                                xType={'time'}\n                                className={\"series\" + { index }}\n                                color={this.colors[index % this.colors.length]}\n                                data={this.getData(data)}\n                                curve={\"curveNatural\"}\n                                stroke={strokeColor}\n                                size={0} />)\n                    })}\n                </FlexibleWidthXYPlot>\n            </div>\n        );\n    }\n}","    \n    import { isTankFiltered } from \"../views/Tanks/Tanks\"\n    import TanksTable from \"../app/db/TanksTable\"\n\n    let graphFilteredTank = null;\n    let dataFilteredTank = null;\n\n    export function setGraphFilteredTank(tank){\n      graphFilteredTank = tank;\n    }    \n    export function getGraphFilteredTank(){\n      return graphFilteredTank;\n    }    \n    \n    export function setDataFilteredTank(tank){\n      dataFilteredTank = tank;\n    }    \n    \n    export function getDataFilteredTank(){\n      return dataFilteredTank;\n    }\n\n    /// filter \n    export function isFiltered(imei,filterStr) {\n\n        if (filterStr !== \"\") {\n          let tanks = new TanksTable().getTanks();\n          for (let index in tanks) {\n            if (tanks[index].imei === imei) {\n              return isTankFiltered(tanks[index], filterStr)\n            }\n          }\n        }\n    \n        return false;\n      }\n    \n\n    export function getFilteredReadings(readingsData, filterStr){\n        if (filterStr !== \"\" && readingsData.length !== 0) {\n          let readings = [...readingsData];\n          for (let index = readings.length - 1; index >= 0; index--) {\n            if (isFiltered(readings[index].imei,filterStr)) {\n              readings.splice(index, 1);\n            }\n          }\n          return readings;\n        }\n        else {\n          return readingsData;\n        }\n      }\n    ","import React from \"react\";\nimport Loader from 'react-loader-spinner'\n\nexport default class Spinner extends React.Component {\n //other logic\n   render() {\n    return(\n     <Loader \n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height=\"100\"\t\n        width=\"100\"\n     />   \n    );\n   }\n}","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport RangeHelper from \"./../Dashboard/RangeHelper\";\nimport RangeView from \"./../Dashboard/RangeView\";\nimport Card from \"components/Card/Card\";\nimport VisGraph from \"components/App/VisGraph.jsx\"\nimport { translate } from \"../../app/lang/lang\";\nimport { getFilteredReadings } from \"../../app/readingsHelper\"\nimport { isAppReady, getBackgroundColor } from \"../../app/adminHelper\";\nimport TanksTable from \"../../app/db/TanksTable\";\nimport { setGraphFilteredTank, getGraphFilteredTank } from \"../../app/readingsHelper\"\nimport Spinner from \"../App/Spinner\"\n\nclass Graph extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { graphReadings: [], rangeIndex: 0, rangeReady: false }\n    }\n\n    componentDidMount() {\n        //update reading timer\n        this.timer = setInterval(this.tick, 250);\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.timer);\n    }\n\n    tick = () => {\n        if (isAppReady()) {\n            let rh = new RangeHelper();\n            //rh.getRangeForHourse(rh.getFirstRangeInHours(), this.rangeReady, \"graph\");\n            this.hoursSelected(rh.getFirstRangeInHours(), 0);\n            clearInterval(this.timer);\n        }\n    }\n\n    hoursSelected = (hours, index) => {\n        this.setState({\n            graphReadings: [], rangeIndex: index,\n            index: index, hours: hours, start: null, end: null\n        });\n        new RangeHelper().getRangeForHourse(hours, this.rangeReady, this.getSelectedTank());\n    }\n\n    rangeSelected = (start, end) => {\n        let rh = new RangeHelper();\n        this.setState({\n            rangeIndex: new RangeHelper().getRanges().length - 1,\n            index: null, hours: null, start: start, end: end\n        })\n        rh.getRangeFromTo(start, end, this.rangeReady, this.getSelectedTank());\n    }\n\n    rangeReady = (range) => {\n        this.setState({ graphReadings: range, rangeReady: true });\n    }\n\n    rangeReadingToGraphData() {\n        let retArray = [];\n        let maxX = 0;\n        let readings = getFilteredReadings(this.state.graphReadings, \"\");\n        let tt = new TanksTable();\n        let maxCapacity = 0;\n        for (let index in readings) {\n            let current = readings[index];\n            let tmpData = [];\n            let tank = tt.getTank(readings[index].imei);\n            if (tank === null || tank.capacity === null) {\n                continue;\n            }\n            for (let currentIndex in current.levels) {\n                let obj = {\n                    x: current.times[currentIndex],\n                    y: current.levels[currentIndex] * tank.capacity / 100,\n                    tankName: tank.name\n                };\n                tmpData.push(obj);\n                if (current.times[currentIndex] > maxX) {\n                    maxX = current.times[currentIndex];\n                }\n\n                if (tank.capacity > maxCapacity) {\n                    maxCapacity = tank.capacity;\n                }\n            }\n            retArray.push(tmpData);\n        }\n\n        // add the max object - TODO fix\n        let tmpData = [];\n        tmpData.push({ x: maxX, y: maxCapacity * 1.2, tankName: \"\" }); // add 20% to the graph\n        retArray.push(tmpData);\n        tmpData = [];\n        tmpData.push({ x: maxX, y: 0, tankName: \"\" });\n        retArray.push(tmpData);\n\n        return retArray;\n    }\n\n    tankSelected = (tank) => {\n        setGraphFilteredTank(tank);\n        if (this.state.start === null) {\n            this.hoursSelected(this.state.hours, this.state.index);\n        }\n        else {\n            this.rangeSelected(this.state.start, this.state.end);\n        }\n    }\n\n    getSelectedTank = () => {\n        return getGraphFilteredTank();\n    }\n\n    render() {\n\n        let height = this.props.fromDashboard === true ? '' : '120%';\n        if (this.state.rangeReady === false) {\n            return (\n                <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: height }}>\n\n                    <Card\n                        hCenter={true}\n                        title=\"Loading Graph...\"\n                        content={<center><Spinner /></center>}\n                    />\n                </div>\n            )\n        }\n\n        let cardId = \"visGraph\"\n        let data = this.rangeReadingToGraphData();\n        let rangeHelper = new RangeHelper();\n        let selectedRange = rangeHelper.getSelectedString(this.state.rangeIndex) + \" for tank: \" + this.getSelectedTank().name;\n\n        return (\n            <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: height }}>\n\n                <Col md={12}>\n                    <Card\n                        id={cardId}\n                        title={translate(\"volumeHistory\")}\n                        category={selectedRange}\n                        hCenter={true}\n                        stats={<RangeView\n                            hoursSelected={this.hoursSelected}\n                            rangeSelected={this.rangeSelected}\n                            tankSelected={this.tankSelected}\n                            getSelectedTank={this.getSelectedTank} />}\n                        content={\n                            <div style={{ height: '380px' }}>\n                                <VisGraph\n                                    data={data}\n                                    maxPoints={40}\n                                />\n                            </div>\n                        }\n                    />\n                </Col>\n            </div>\n        );\n    }\n}\n\nexport default Graph;\n","import React, { Component } from \"react\";\nimport { Col, Table, Button } from \"react-bootstrap\";\nimport Card from \"components/Card/Card.jsx\";\nimport TanksTable from \"../../app/db/TanksTable\"\nimport { getFormattedTime, isIos } from \"app/adminHelper.jsx\"\nimport { makePdf } from \"./PdfMaker\"\n\nclass TableList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.arrayForTable = [];\n    this.arrayForExcel = [[]];\n    this.arrayForPdf = [[]];\n    this.tanksNames = [];\n    this.state = { excelTableReady: false };\n  }\n\n  componentDidMount = () => {\n    import('./ExcelTable').then(ExcelTable => {\n      this.ExcelTable = ExcelTable;\n      this.setState({ excelTableReady: true });\n      console.log(\"excelTable Ready\");\n    })\n  }\n\n  getHeader = () => {\n    return [\"ID\", \"Tank\", \"Left in Tank (%)\", \"Volume\", \"Time\"];\n  }\n\n  createData = () => {\n    this.arrayForExcel = [[]];\n    this.arrayForPdf = [[]];\n    this.arrayForTable = [];\n    this.tanksNames = [];\n    let tt = new TanksTable();\n    let count = 1;\n    for (let index in this.props.rangeReadings) {\n      let tank = tt.getTank(this.props.rangeReadings[index].imei);\n      let tankName = tank.name;\n      this.tanksNames.push(tankName);\n      this.arrayForExcel[index] = [];\n      this.arrayForPdf[index] = [];\n      this.arrayForPdf[index].push([tankName, 'Time', 'Left In Tank', 'Volume']);\n      for (let readings in this.props.rangeReadings[index].levels) {\n        let time = getFormattedTime(this.props.rangeReadings[index].times[readings]);\n        let level = this.props.rangeReadings[index].levels[readings];\n        let sample = this.props.rangeReadings[index].samples[readings];\n        let vol = level * tank.capacity / 100;\n        let row = [\n          count++,\n          tankName,\n          level + \" %\",\n          vol + \" L\",\n          time];\n        this.arrayForTable.push(row);\n        let rowForExcel = { time: time, level: level + \" %\", vol: vol + \" L\", samples: sample };\n        this.arrayForExcel[index].push(rowForExcel);\n        this.arrayForPdf[index].push(['', time, level + \" %\", vol + \" L\"]);\n      }\n      if (this.props.rangeReadings[index].levels.length === 0) {\n        // tank without readings history\n        let row = [\n          \"!!!!!!!\",\n          tankName,\n          \"No History For This Tank\",\n          \"!!!!!!!\",\n          \"!!!!!!!\"];\n        this.arrayForTable.push(row);\n      }\n    }\n  }\n\n  creatPdfDocDefinition = () => {\n    let array = [];\n    for (let index in this.arrayForPdf) {\n      let pb = { text: '', pageBreak: 'after', style: 'subheader' };\n\n      let obj = {\n        style: 'tableExample',\n        table: {\n          headerRows: 1,\n          widths: ['*', '*', '*', '*'],\n          body: this.arrayForPdf[index]\n        }\n      };\n      array.push(obj);\n      array.push(pb);\n    }\n\n    return array;\n  }\n\n  exportToPdf = (exportOrPrint) => {\n    makePdf(exportOrPrint, this.creatPdfDocDefinition());\n  }\n\n  renderExport = () => {\n    console.log(\"renderExport\");\n    return (\n      <div>\n        <div>\n          {this.props.rangeButtons}\n        </div>\n        {isIos() === false &&\n          <div>\n            <this.ExcelTable.default button={<Button bsStyle=\"primary\" style={{ margin: '3px' }} >Export To Excel</Button>} data={this.arrayForExcel} tanksNames={this.tanksNames} />\n            <Button bsStyle=\"primary\" style={{ margin: '3px' }} onClick={() => this.exportToPdf('export')}>Export To PDF</Button>\n            <Button bsStyle=\"primary\" style={{ margin: '3px' }} onClick={() => this.exportToPdf('print')}>Print</Button>\n        </div>\n        }\n      </div>\n    );\n  }\n\n  render() {\n\n    if (this.state.excelTableReady === false) {\n      return null;\n    }\n    console.log(\"render TableList \");\n\n    this.createData();\n    let header = this.getHeader();\n    return (\n      <Col md={12}>\n        <Card\n          title={this.props.title}\n          category={this.props.category}\n          hCenter={true}\n          ctTableFullWidth\n          stats={this.renderExport()}\n          content={\n            <div style={{ height: '50%', overflowY: 'auto' }}>\n              <Table striped hover >\n                <thead >\n                  <tr>\n                    {header.map((prop, key) => {\n                      return <th key={key}>{prop}</th>;\n                    })}\n                  </tr>\n                </thead>\n                <tbody style={{ overflow: 'auto' }}>\n                  {this.arrayForTable.map((prop, key) => {\n                    return (\n                      <tr key={key}>\n                        {prop.map((prop, key) => {\n                          return <td key={key}>{prop}</td>;\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          }\n        />\n      </Col>\n    );\n  }\n}\n\nexport default TableList;\n","\n\nexport function makePdf(exportOrPrint, pdfDocDefinition) {\n\n    import('pdfmake/build/pdfmake.js')\n        .then((pdfMake) => {\n            // pdfMake was loded\n            console.log(\"pdfMake loded\");\n            var docDefinition = {\n                compress: true,\n                content: pdfDocDefinition\n            };\n\n            import('pdfmake/build/vfs_fonts.js')\n                .then((pdfFonts) => {\n                    pdfMake.vfs = pdfFonts.pdfMake.vfs;\n                    pdfMake.tableLayouts = {\n                        exampleLayout: {\n                            hLineWidth: function (i, node) {\n                                if (i === 0 || i === node.table.body.length) {\n                                    return 0;\n                                }\n                                return (i === node.table.headerRows) ? 2 : 1;\n                            },\n                            vLineWidth: function (i) {\n                                return 0;\n                            },\n                            hLineColor: function (i) {\n                                return i === 1 ? 'black' : '#aaa';\n                            },\n                            paddingLeft: function (i) {\n                                return i === 0 ? 0 : 8;\n                            },\n                            paddingRight: function (i, node) {\n                                return (i === node.table.widths.length - 1) ? 0 : 8;\n                            }\n                        }\n                    };\n\n                    // download the PDF\n                    if (exportOrPrint === 'export') {\n                        pdfMake.createPdf(docDefinition).download('NTCL-MonitoringData.pdf');\n                    }\n                    if (exportOrPrint === 'print') {\n                        pdfMake.createPdf(docDefinition).print();\n                    }\n                })\n                .catch(err => {\n                    console.log(err + \"Error importing pdfFonts\");\n                });\n        })\n        .catch(err => {\n            // Handle failure\n            console.log(err + \"Error importing pdfMake\");\n        });\n};","import React, { Component } from \"react\";\nimport RangeHelper from \"./../Dashboard/RangeHelper\";\nimport { translate } from \"../../app/lang/lang\";\nimport { getFilteredReadings } from \"../../app/readingsHelper\"\nimport { isAppReady, getBackgroundColor } from \"../../app/adminHelper\";\nimport TableList from \"../TableList/TableList\"\nimport RangeView from \"./../Dashboard/RangeView\";\nimport { setDataFilteredTank, getDataFilteredTank } from \"../../app/readingsHelper\"\nimport Spinner from \"../App/Spinner\"\nimport Card from \"components/Card/Card\";\nimport { Col } from \"react-bootstrap\";\n\nclass Data extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { tableReadings: [], rangeIndex: 0, rangeReady: false }\n    }\n\n    componentDidMount() {\n        //update reading timer\n        this.timer = setInterval(this.tick, 250);\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.timer);\n    }\n\n    tick = () => {\n        if (isAppReady()) {\n            let rh = new RangeHelper();\n            //rh.getRangeForHourse(rh.getFirstRangeInHours(), this.rangeReady, \"data\");\n            clearInterval(this.timer);\n            this.hoursSelected(rh.getFirstRangeInHours(), 0);\n        }\n    }\n\n    hoursSelected = (hours, index) => {\n        this.setState({\n            tableReadings: [], rangeIndex: index,\n            index: index, hours: hours, start: null, end: null\n        });\n        new RangeHelper().getRangeForHourse(hours, this.rangeReady, this.getSelectedTank());\n    }\n\n    rangeSelected = (start, end) => {\n        let rh = new RangeHelper();\n        this.setState({\n            rangeIndex: new RangeHelper().getRanges().length - 1,\n            index: null, hours: null, start: start, end: end\n        })\n        rh.getRangeFromTo(start, end, this.rangeReady, this.getSelectedTank());\n    }\n\n    tankSelected = (tank) => {\n        setDataFilteredTank(tank);\n        // update the data according to the last selection\n        if (this.state.start !== null) {\n            this.rangeSelected(this.state.start, this.state.end);\n        }\n        else {\n            this.hoursSelected(this.state.hours, this.state.index);\n        }\n    }\n\n    getSelectedTank = () => {\n        return getDataFilteredTank();\n    }\n\n    rangeReady = (range) => {\n        this.setState({ tableReadings: range, rangeReady: true });\n    }\n\n    render() {\n        let height = this.props.fromDashboard === true ? '' : '120%';\n\n        if (this.state.rangeReady === false) {\n\n            return (\n                <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: height }}>\n\n                    <Col md={12}>\n                        <Card\n                            hCenter={true}\n                            title=\"Loading Data...\"\n                            content={<center><Spinner /></center>}\n                        /></Col>\n                </div>\n            )\n        }\n\n        return (\n\n            <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: height }}>\n\n                <TableList\n                    rangeReadings={getFilteredReadings(this.state.tableReadings, \"\")}\n                    title={translate(\"latestData\")}\n                    rangeButtons={<RangeView\n                        hoursSelected={this.hoursSelected}\n                        rangeSelected={this.rangeSelected}\n                        tankSelected={this.tankSelected}\n                        getSelectedTank={this.getSelectedTank} />}\n                    category={new RangeHelper().getSelectedString(this.state.rangeIndex)} />\n            </div>\n        )\n    }\n}\n\nexport default Data;\n","import React, { Component } from 'react'\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nexport class MapContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {},\n        };\n\n        this.activeMarkerTitle = \"\";\n    }\n\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n    }\n\n    onMouseOver = (props, marker, e) => {\n        if (this.activeMarkerTitle === marker.title) {\n            return;\n        }\n        else {\n            this.activeMarkerTitle = marker.title;\n        }\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n    }\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n\n        this.activeMarkerTitle = \"\";\n    };\n\n    renderMarkers = (markers) => {\n        return (\n            markers.map((marker, index) => {\n                return <Marker\n                    onClick={this.onMarkerClick}\n                    onMouseover={this.onMouseOver}\n                    title={\"\" + index}\n                    info={marker.info} key={index}\n                    position={{ lat: marker.lat, lng: marker.lng }} />\n            }\n            ));\n    }\n\n    getCenter = (markers) => {\n        let lat = 0;\n        let lng = 0;\n        let ignore = 0;\n        for (let index in markers) {\n            if (markers[index].lat === 0 || markers[index].lng === 0){\n                ignore+=1;\n            }\n            lat += markers[index].lat;\n            lng += markers[index].lng;\n        }\n\n        // make sure we not dividing by 0\n        let div = (markers.length-ignore)!==0?(markers.length-ignore):1\n\n        return { lat: lat / div, lng: lng / div };\n    }\n\n    convertGpsPosition = (pos) => {\n        let lat = parseFloat(pos.lat.substring(0, 9), 10);\n        let lng = parseFloat(pos.lng.substring(0, 10), 10);\n\n        let latSign = (pos.lat[9] === \"N\") ? 1 : -1;\n        let lngSign = (pos.lng[10] === \"E\") ? 1 : -1;\n\n        return {\n            info: pos.info,\n            lat: (Math.floor(lat / 100) + ((lat % 100) / 60))*latSign,\n            lng: (Math.floor(lng / 100) + ((lng % 100) / 60))*lngSign\n        };\n    }\n\n    render() {\n        const style1 = {\n            height: this.props.height,\n            position: 'relative'\n        }\n        const style2 = {\n            width: '90%',\n            height: '90%',\n            position: 'relative'\n\n        }\n\n        let markers = [];\n        for (let index in this.props.markers) {\n            markers.push(this.convertGpsPosition(this.props.markers[index]));\n        }\n\n        return (\n            <div style={style1}>\n                <center><Map google={window.google}\n                    zoom={this.props.zoom} style={style2}\n                    onClick={this.onMapClicked}\n                    onReady={this.mapIsReady}\n                    initialCenter={this.getCenter(markers)}>\n\n                    {this.renderMarkers(markers)}\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <div>\n                            {this.state.selectedPlace.info}\n                        </div>\n                    </InfoWindow>\n                </Map></center>\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: ('AIzaSyAugb6uKPRiLYNHII5GEgQxHVSTL73IUVk')\n})(MapContainer)","import React, { Component } from \"react\";\nimport { translate } from \"../../app/lang/lang\";\nimport { getFilteredReadings } from \"../../app/readingsHelper\"\nimport MapContainer from \"../../components/App/Map\"\nimport { Card } from \"../../components/Card/Card\"\nimport { isAppReady, getBackgroundColor } from \"../../app/adminHelper\";\nimport { Col, Table } from \"react-bootstrap\";\nimport TanksReading from \"../../app/db/TankReadings\";\nimport TanksTable from \"../../app/db/TanksTable\";\nimport Spinner from \"../App/Spinner\"\n\nclass Locations extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { lastTanksReadings: [] };\n  }\n\n  componentDidMount() {\n    //update reading timer\n    this.timer = setInterval(this.tick, 250);\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer);\n  }\n\n  tick = () => {\n    if (isAppReady()) {\n      this.setState({ lastTanksReadings: new TanksReading().getLevelMonitoring(\"name\") });\n      clearInterval(this.timer);\n    }\n  }\n\n  renderInfo = (reading) => {\n    let tt = new TanksTable();\n    let tank = tt.getTank(reading.imei);\n\n    return (\n      <Table striped bordered condensed hover>\n        <tbody>\n          <tr>\n            <td><center>Tank Name</center></td>\n            <td><center>{tank.name}</center></td>\n          </tr>\n          <tr>\n            <td><center>Building</center></td>\n            <td><center>{tank.building}</center></td>\n          </tr>\n        </tbody>\n      </Table>\n    )\n  }\n\n  getMarkers = () => {\n    let filterStr = this.props.filterStr;\n    if (filterStr === null || filterStr === undefined) {\n      filterStr = \"\";\n    }\n    let markers = [];\n    let readings = getFilteredReadings(this.state.lastTanksReadings, filterStr);\n    for (let index in readings) {\n      let info = this.renderInfo(readings[index]);\n      markers.push({\n        info: info,\n        lat: readings[index].gps.lat,\n        lng: readings[index].gps.long\n      })\n    }\n\n    return markers;\n  }\n\n  render() {\n\n    let markers = this.getMarkers();\n    let contentHeight = this.props.fromDashboard === true ? '' : '120%';\n\n    if (markers.length === 0) {\n      return (\n        <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: contentHeight }}>\n\n          <Col md={12}>\n            <Card\n              hCenter={true}\n              title=\"Loading Location...\"\n              content={<center><Spinner /></center>}\n            /></Col>\n        </div>\n      )\n    }\n\n    let title = translate(\"tankLocation\");\n    if (markers.length > 1) {\n      title = translate(\"tanksLocations\")\n    }\n\n    let height = this.props.fromDashboard === true ? '40%' : '70%';\n    contentHeight = this.props.fromDashboard === true ? '' : '110%';\n\n    return (\n      <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: contentHeight }}>\n        <Col xs={12}>\n          <Card\n            hCenter={true}\n            statsIcon=\"fa fa-history\"\n            id=\"chartHours\"\n            title={title}\n            stats=\"Updated\"\n            content={<MapContainer height={height} markers={markers} zoom={13} />}\n          />\n        </Col>\n      </div>\n    );\n  }\n}\n\nexport default Locations;\n","import React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { StatsCard } from \"components/StatsCard/StatsCard.jsx\"\nimport TanksTable from \"../../app/db/TanksTable.jsx\"\nimport { LogInHelper } from \"app/logInHelper\";\nimport NotificationHelper from \"../../app/notificationHelper\"\nimport TanksReading from \"../../app/db/TankReadings.jsx\";\nimport { levelAlertView, heartBeatView } from \"../Notifications/TanksNotifications\"\nimport { renderTanks, renderFilterTanksCard } from \"../Tanks/Tanks.jsx\"\nimport Graph from \"../Graph/Graph\";\nimport Data from \"../Data/Data\";\nimport Locations from \"../Location/Locations\";\nimport { getFilteredReadings } from \"../../app/readingsHelper\"\nimport { isAppReady, getBackgroundColor } from \"../../app/adminHelper\"\nimport Spinner from \"../App/Spinner\"\n//import logo from \"assets/img/orbitBanner.png\";\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tanks: [],\n      lastTanksReadings: [],\n      filterStr: \"\"\n    }\n    this.getRangeReadingOnce = true;\n    this.tickToggle = true;\n  }\n\n  componentDidMount() {\n    //update reading timer\n    this.timer = setInterval(this.tick, 35000);\n    this.fastTimer = setInterval(this.fastTick, 250);\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer);\n    clearInterval(this.fastTimer);\n  }\n\n  tick = () => {\n    if (this.tickToggle) {\n      // update the last readings\n      new TanksReading().getLastReading(this.tanksReadingReady);\n    }\n    else {\n      // read the tanks table for alers\n      new TanksTable().start(this.dataIsReady, true);\n    }\n    this.tickToggle = this.tickToggle ? false : true;\n  }\n\n  fastTick = () => {\n    if (isAppReady()) {\n      this.dataIsReady();\n      clearInterval(this.fastTimer);\n    }\n  }\n\n  dataIsReady = () => {\n    // check is this is admin user or regulare\n    let tt = new TanksTable();\n    let logInHelper = new LogInHelper();\n    let customerId = logInHelper.getLoggedInCustomerId();\n    if (logInHelper.isAdmin()) {\n      this.setState({ tanks: tt.getTanks() });\n    }\n    else {\n      this.setState({ tanks: tt.getCustomerTanks(customerId) });\n    }\n\n    this.tanksReadingReady();\n\n  }\n\n  tanksReadingReady = () => {\n    let lm = new TanksReading().getLevelMonitoring(\"name\");\n    if (lm) {\n      this.setState({ lastTanksReadings: lm });\n    }\n  }\n\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  renderTanks() {\n\n    let readings = getFilteredReadings(this.state.lastTanksReadings, this.state.filterStr);\n\n    return renderTanks(readings, false);\n  }\n\n\n  renderAlerts = () => {\n\n    // disabled for now\n    if (true){\n      return null;\n    }\n    let nh = new NotificationHelper();\n\n    let levelAlerts = nh.getLevelNotifications();\n    let hearBeatAlerts = nh.getHeartBeatNotification();\n\n    if (levelAlerts.length === 0 && hearBeatAlerts.length === 0) {\n      return null;\n    }\n\n    return (\n      <Col xs={12} onClick={() => this.props.history.push(`alerts`)}>\n        <StatsCard\n          statsText={\n            <div style={{ animation: 'scale 0.5s linear infinite alternate', color: 'red' }}>\n              <i className=\"pe-7s-gleam text-danger\">Alerts</i>\n            </div>}\n          statsValue={<div>\n            <br />\n            {levelAlertView(levelAlerts)}\n            {heartBeatView(hearBeatAlerts)}\n          </div>}\n          statsIcon={<i className=\"fa fa-clock-o\" />}\n          statsIconText=\"Click for more info\"\n        />\n      </Col>\n    );\n  }\n\n  render() {\n    if (this.state.tanks.length === 0) {\n      return (\n        <div className=\"content\" style={{ backgroundColor: getBackgroundColor(), height: '120%' }}>\n\n          <Card\n            hCenter={true}\n            title=\"Loading ...\"\n            content={<center><Spinner /></center>}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"content\" style={{ backgroundColor: getBackgroundColor() }}>\n        {/*<center><img src={logo} alt=\"logo_image\" style={{ height: '8.5%' }} /></center>\n        <p />*/}\n        <Grid fluid >\n          {new LogInHelper().isAdmin() &&\n            <Row>\n              {renderFilterTanksCard(this)}\n            </Row>\n          }\n          <Row>\n            {this.renderAlerts()}\n          </Row>\n          <Row>\n            {this.renderTanks()}\n          </Row>\n          <Row>\n            <Graph fromDashboard={true} />\n          </Row>\n          <Row>\n            <Locations filterStr={this.state.filterStr} fromDashboard={true} />\n          </Row>\n          <Row>\n            <Data fromDashboard={true} />\n          </Row>\n          {/*\n          <Row>\n            <Col md={12}>\n              <Card\n                hCenter={true}\n                title=\"Monitoring Tanks Is Active\"\n                content={<center><Spinner /></center>}\n              />\n            </Col>\n          </Row>\n */}\n          {/*<Row>\n            <Col xs={12} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-server text-warning\" />}\n                statsText=\"Capacity\"\n                statsValue=\"105GB\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n            <Col xs={12} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Revenue\"\n                statsValue=\"$1,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col xs={12} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Errors\"\n                statsValue=\"23\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last hour\"\n              />\n            </Col>\n            <Col xs={12} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fa fa-twitter text-info\" />}\n                statsText=\"Followers\"\n                statsValue=\"+45\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n            \n            <Col md={4}>\n              <Card\n                statsIcon=\"fa fa-clock-o\"\n                title=\"Email Statistics\"\n                category=\"Last Campaign Performance\"\n                stats=\"Campaign sent 2 days ago\"\n                content={\n                  <div\n                    id=\"chartPreferences\"\n                    className=\"ct-chart ct-perfect-fourth\"\n                  >\n                    <ChartistGraph data={dataPie} type=\"Pie\" />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendPie)}</div>\n                }\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <Card\n                id=\"chartActivity\"\n                title=\"2014 Sales\"\n                category=\"All products including Taxes\"\n                stats=\"Data information certified\"\n                statsIcon=\"fa fa-check\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataBar}\n                      type=\"Bar\"\n                      options={optionsBar}\n                      responsiveOptions={responsiveBar}\n                    />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendBar)}</div>\n                }\n              />\n            </Col>\n\n            <Col md={6}>\n              <Card\n                title=\"Tasks\"\n                category=\"Backend development\"\n                stats=\"Updated 3 minutes ago\"\n                statsIcon=\"fa fa-history\"\n                content={\n                  <div className=\"table-full-width\">\n                    <table className=\"table\">\n                      <Tasks />\n                    </table>\n                  </div>\n                }\n              />\n            </Col>\n          </Row>\n              \n          </Row>*/}\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Modal, Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { AppLogger } from \"../../app/Logger\";\nimport CustomersTable from \"../../app/db/CustomersTable\";\nimport { getPrimaryColor } from 'app/adminHelper'\nimport { translate } from 'app/lang/lang.js'\nimport { industries } from 'app/lang/dic.js'\n\nexport class CustomerForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customerName: \"\", hideButtons: false, formMessage: null,\n            mailingList: [],\n            industry: industries[0]\n        };\n\n        this.style = { 'color': getPrimaryColor() };\n\n    }\n\n    restCallBack = (message) => {\n        if (message) {\n            this.setState({ hideButtons: false, formMessage: message });\n        }\n        else {\n            this.props.onHide();\n            this.setState({ hideButtons: false, formMessage: '' });\n        }\n    }\n\n    addNewCustomer() {\n        if (this.validatCustomer() === 'error'){\n            this.setState({ formMessage: 'Invalid customer name' });\n            return;\n        }\n        this.setState({ hideButtons: true, formMessage: 'Adding New Customer...' });\n        let customrtTable = new CustomersTable();\n        customrtTable.addNewCustomer(\n            this.state.customerName,\n            this.state.industry,\n            this.state.mailingList,\n            this.restCallBack);\n    }\n\n    updateCustomer() {\n        console.log(AppLogger( \"updating \" + this.props.customer.name));\n        let customrtTable = new CustomersTable();\n        customrtTable.updateCustomer(this.props.customer, this.restCallBack);\n    }\n\n    validateMail(mail) {\n        var re = /\\S+@\\S+\\.\\S+/;\n        if (mail && mail.length !== 0 && re.test(mail) === false) {\n            return 'error';\n        }\n\n        return 'success';\n    }\n\n    validatCustomer() {\n        if (this.state.customerName.length > 2) {\n            return 'success'\n        }\n        return 'error'\n    }\n\n    deleteMail = (index) => {\n        let tmpMailingList = this.state.mailingList;\n        if (this.props.customer) {\n            tmpMailingList = this.props.customer.mailing_list;\n        }\n        tmpMailingList.splice(index, 1);\n        this.setState({ mailingList: tmpMailingList });\n        if (this.props.customer) {\n            this.props.customer.mailing_list = tmpMailingList;\n        }\n    }\n\n    addMail = () => {\n        if (this.validateMail(this.state.mailAddrees) === 'error') {\n            this.setState({ formMessage: \"Mail is not valid\" });\n        }\n        else {\n            let tmpMailingList = this.state.mailingList;\n            tmpMailingList.push(this.state.mailAddrees);\n            this.setState({ mailingList: tmpMailingList, formMessage: null });\n            if (this.props.customer) {\n                this.props.customer.mailing_list = tmpMailingList;\n            }\n        }\n    }\n\n    createMailForm = (mail, index) => {\n\n        return (\n            <div align=\"left\" key={index}>\n                <Button style={{ margin: '3px' }} value={index}\n                    onClick={(e) => this.deleteMail(e.target.value)}>\n                    Remove\n                </Button>\n                &nbsp; {mail}\n            </div>\n        );\n    }\n\n    renderFormCustomerFiled() {\n\n        let mailingList = this.state.mailingList;\n        if (this.props.customer) {\n            mailingList = [...this.props.customer.mailing_list];\n        }\n\n        return (\n            <div>\n                {this.props.customer === null &&\n                    <FormGroup controlId=\"formBasicText\"\n                        validationState={this.validatCustomer()}>\n                        <center><ControlLabel style={this.style}>{translate('customerName')}</ControlLabel></center>\n                        <FormControl\n                            type=\"text\"\n                            placeholder={translate('customerName')}\n                            onChange={(e) => { this.setState({ customerName: e.target.value, formMessage: null }) }}\n                        />\n                    </FormGroup>\n                }\n                {this.props.customer === null &&\n                    <FormGroup controlId=\"formBasicText\">\n                        <center><ControlLabel style={this.style}>{translate('industry')}</ControlLabel></center>\n                        <FormControl componentClass=\"select\" onChange={(e) => this.setState({ industry: e.target.value })}>\n                            {industries.map(function (name, index) {\n                                return <option key={index} value={name}>\n                                    {translate(name)}\n                                </option>\n                            })}\n                        </FormControl>\n                    </FormGroup>\n                }\n                {\n                    mailingList.length > 0 && <center><ControlLabel style={this.style}>Alerts Mails</ControlLabel></center>\n                }\n                {\n                    mailingList.map((mail, index) => this.createMailForm(mail, index))\n                }\n                <hr/>\n                <FormGroup controlId=\"formBasicText\"\n                    validationState={this.validateMail()}>\n                    <center><ControlLabel style={this.style}>{translate('mailAddress')}</ControlLabel></center>\n                    <FormControl\n                        type=\"email\"\n                        placeholder={translate('mailAddress')}\n                        onChange={(e) => { this.setState({ mailAddrees: e.target.value, formMessage: null }) }}\n                    />\n                </FormGroup>\n                <center><Button\n                    onClick={(index) => this.addMail(index)}>{\"Add Alerts Mail\"}\n                </Button></center>\n            </div>\n        )\n    }\n\n    createForm() {\n\n        return (\n            <form>\n                {this.renderFormCustomerFiled()}\n                <center><div>{this.state.formMessage}</div></center>\n            </form>\n        );\n    }\n\n    deleteCustomer() {\n        console.log(AppLogger( \"deleteCustomer \" + this.props.customer.id));\n\n        let customrtTable = new CustomersTable();\n        customrtTable.deleteCustomer(this.props.customer.id);\n        this.props.onHide();\n    }\n\n    renderButtons() {\n        if (this.state.hideButtons === true) {\n            return null;\n        }\n        return (\n            <div>\n                <Button onClick={this.props.onHide}>{translate('cancel')}</Button>\n                {this.props.customer == null ?\n                    <Button onClick={() => this.addNewCustomer()}>{translate('add')}</Button> :\n                    <Button onClick={() => this.updateCustomer()}>{translate('update')}</Button>}\n            </div>\n        );\n    }\n\n    render() {\n        let addnewCustomerText = translate('addNewCustomer');\n        return (\n            <Modal {...this.props} bsSize=\"small\" aria-labelledby=\"contained-modal-title-sm\">\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-sm\" style={this.style}>\n                        {this.props.customer ?\n                            \"Manage Customer - \" + this.props.customer.name :\n                            addnewCustomerText}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    {this.createForm()}\n                </Modal.Footer>\n                <Modal.Footer>\n                    {this.renderButtons()}\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default CustomerForm;","import React from \"react\";\nimport { Modal, Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { AppLogger } from \"../../app/Logger\";\nimport UsersTable from \"../../app/db/UsersTable\";\nimport { getPrimaryColor } from 'app/adminHelper'\nimport { translate } from \"../../app/lang/lang\";\n\nexport class UsersForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { userName: \"\",password:\"\", hideButtons: false, settingMessage: null };\n\n        this.style = { 'color': getPrimaryColor() };\n    }\n\n    restCallBack = (message) => {\n        if (message) {\n            this.setState({ hideButtons: false, settingMessage: message });\n        }\n        else {\n            this.setState({ hideButtons: false, settingMessage: \"done\" });\n            this.props.onHide();\n        }\n    }\n\n    addNewUser() {\n        this.setState({ hideButtons: true, settingMessage: translate('addingNewUser') });\n        let usersTable = new UsersTable();\n        usersTable.add(\n            this.state.userName,\n            this.state.password,\n            this.props.customer.id,\n            this.props.customer.name,\n            this.restCallBack);\n    }\n\n    validate = (str) => {\n        if ((str.length > 2) && (str.indexOf(' ')) === -1) {\n            return 'success'\n        }\n        else{\n            return 'error';\n        }\n    }\n\n    validatUser() {\n        return this.validate(this.state.userName);\n    }\n\n    validatPass = () => {\n        return this.validate(this.state.password);\n    }\n\n    renderFormUsersFiled() {\n\n        return (\n            <div>\n                <FormGroup controlId=\"formBasicText\"\n                    validationState={this.validatUser()}>\n                    <center><ControlLabel style={this.style}>User Name</ControlLabel></center>\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"User Name\"\n                        onChange={(e) => { this.setState({ userName: e.target.value, settingMessage: null }) }}\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"formBasicText\"\n                    validationState={this.validatPass()}>\n                    <center><ControlLabel style={this.style}>Password</ControlLabel></center>\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Password\"\n                        onChange={(e) => { this.setState({ password: e.target.value, settingMessage: null }) }}\n                    />\n                </FormGroup>\n            </div>\n        )\n    }\n\n    createForm() {\n        return (\n            <form>\n                {this.renderFormUsersFiled()}\n                <center><div>{this.state.settingMessage}</div></center>\n            </form>\n        );\n    }\n\n    renderButtons() {\n        if (this.state.hideButtons === true) {\n            return null;\n        }\n        return (\n            <div>\n                <Button onClick={this.props.onHide}>Cancel</Button>\n                {this.validatUser() === 'success' && this.validatPass() === 'success' &&\n                    <Button onClick={() => this.addNewUser()}>Add</Button>\n                }\n            </div>\n        );\n    } \n\n    render() {\n        console.log(AppLogger( \"render\"));\n        return (\n            <Modal {...this.props} bsSize=\"small\" aria-labelledby=\"contained-modal-title-sm\">\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-sm\" style={this.style}>\n                        Add New User\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    {this.createForm()}\n                </Modal.Footer>\n                <Modal.Footer>\n                    {this.renderButtons()}\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default UsersForm;","import React from \"react\";\nimport {\n    Modal, Button, FormGroup, FormControl, ControlLabel,\n    DropdownButton, MenuItem\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { AppLogger } from \"../../app/Logger\";\nimport { liquids, sensors } from 'app/lang/dic.js'\nimport { translate } from \"../../app/lang/lang\";\nimport TanksTable from \"../../app/db/TanksTable\";\n\nclass SettingsModal extends React.Component {\n\n    render() {\n        return (\n            <Modal {...this.props} bsSize=\"lg\" aria-labelledby=\"contained-modal-title-sm\">\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-sm\">\n                        {this.props.title}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.props.text.map((text, index) =>\n                        <div key={index}>{text}</div>\n                    )}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\nexport class TankForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            imei: \"\",\n            phone: '0000',\n            name: \"\",\n            building: \"\",\n            liquid_type: liquids[0],\n            sensor_type: sensors[0],\n            capacity: 0,\n            high: 0,\n            iccid: '12345', //default\n            sampling_interval: 0,\n            heartbeat_timeout: (60 * 60000),\n\n            // settings modal\n            showSettingsModal: false,\n            settingsModalText: [],\n            level_alerts: [],\n\n            simConfigurationIndex: 0 // 0 for local sim 1 for monogoto\n        };\n\n        this.message = null;\n\n        // form place holders\n        this.imeiPh = \"Tank ID (IMEI)\";\n        this.iccidPh = \"Thing ICCID\";\n        this.phoneNumberPh = \"Tank Phone number\";\n        this.namePh = \"Tank Name\";\n        this.buildingPh = \"Building Name\"\n        this.capacityPh = \"Capacity\";\n        this.highPh = \"Hight\";\n        this.sampleIntervalPh = \"Sample Interval\";\n\n        this.runTimer = true;\n\n        // sim config\n        this.simConfigurationTitle = [\n            \"Configuring Local SIM \",\n            \"Configuring Monogoto SIM \"];\n    }\n\n    validateForm() {\n        if (this.state.imei.length !== 15 && this.state.imei.length !== 16) {\n            return \"Invalid IMEI - length must be 15 or 16 current length is \" + this.state.imei.length;\n        }\n\n        if (this.state.simConfigurationIndex === 1 && this.state.iccid.length < 5) {\n            return \"Invalid iccid length, current length \" + this.state.iccid.length;\n        }\n\n        if (this.state.sampling_interval < 60) {\n            return \"Invalid Sampling Interval - value is less the 60 seconds\";\n        }\n\n        if (this.state.name === \"\") {\n            return \"Invalid tank name - name can't be empty\";\n        }\n\n        if (this.state.capacity === 0) {\n            return \"Invalid tank capacity - capacity can't be 0\";\n        }\n\n        if (this.state.high === 0) {\n            return \"Invalid tank high - high can't be 0\";\n        }\n\n        return null;\n    }\n\n    updateSettingsTimeOut = () => {\n        this.setState({ showSettingsModal: false, settingsModalText: [] });\n        this.props.onHide();\n        clearInterval(this.timer);\n    }\n\n    updateSettingsModal = (show, text) => {\n        console.log(AppLogger( \"updateSettingsModal \" + show));\n        console.log(AppLogger( \"updateSettingsModal \" + this.state.settingsModalText));\n        console.log(AppLogger( \"updateSettingsModal \" + text));\n        let textArray = this.state.settingsModalText.slice(0, this.state.settingsModalText.length);\n        textArray.push(text);\n        if (!show) { // close the modal after 2 seconds\n            this.setState({ settingsModalText: textArray });\n            this.timer = setInterval(this.updateSettingsTimeOut, 5000);\n        }\n        else {\n            this.setState({ showSettingsModal: show, settingsModalText: textArray });\n        }\n    }\n\n    addTankCallBack = (succedded) => {\n        if (succedded) {\n            this.updateSettingsModal(true, \"done.\");\n            if (this.state.simConfigurationIndex === 0) {\n                this.configureThingDone();\n            }\n            else {\n                this.configureThing(this.setServerIp);\n            }\n        }\n        else {\n            this.updateSettingsModal(false, \"Failed to add tank\");\n        }\n    }\n\n    addNewTank() {\n        console.log(AppLogger( \"addNewTank\"));\n\n        // check if this is \n        let validateString = this.validateForm();\n\n        if (validateString) {\n            alert(validateString);\n            return;\n        }\n\n        let tt = new TanksTable();\n        tt.addTank(this.addTankCallBack, this.state, this.props.customer.id);\n\n        this.updateSettingsModal(true, \"Adding Tank to DB...\");\n    }\n\n    updateTankCallBack = (succedded) => {\n        if (succedded) {\n            this.updateSettingsModal(true, \"Updating Tank DB...Done\");\n            if (this.samplingIntervalChanged) { // update if interval changed\n                this.configureThing(this.setInterval);// update the thing\n            }\n            else {\n                this.updateSettingsModal(false, \"Setting thing done.\");\n            }\n        }\n        else {\n            this.updateSettingsModal(false, \"Fail to update tank\");\n        }\n    }\n\n    updateTank() {\n        console.log(AppLogger( \"updateTank \"));\n\n        // check if this is \n        let validateString = this.validateForm();\n\n        if (validateString) {\n            alert(validateString);\n            return;\n        }\n\n        let tt = new TanksTable();\n        tt.updateTank(this.updateTankCallBack, this.state, this.props.customer.id);\n\n        this.updateSettingsModal(true, \"Updating Tank DB...\");\n    }\n\n    liquidSelected = (value) => {\n        let liquid = liquids[value]\n        this.setState({ liquid_type: liquid });\n    }\n\n    sensorSelected = (value) => {\n        let sensor = sensors[value]\n        this.setState({ sensor_type: sensor });\n    }\n\n    renderIccdAndPhone = () => {\n        if (this.state.simConfigurationIndex === 1) {\n            return (\n                <div>\n                    <ControlLabel>Tank ICCID</ControlLabel>\n                    {\n                        !this.props.tank &&\n                        <div>\n                            <FormControl\n                                type=\"text\"\n                                placeholder={this.iccidPh}\n                                onChange={(e) => this.setState({ iccid: e.target.value })}\n                            />\n                        </div>\n                    }\n                    {this.props.tank && <p> {this.props.tank.iccid}</p>}\n                    <ControlLabel>Phone number</ControlLabel>\n                    <FormControl\n                        type=\"text\"\n                        placeholder={this.phoneNumberPh}\n                        onChange={(e) => this.setState({ phone: e.target.value })}\n                    />\n                </div>)\n        }\n        else {\n            return null;\n        }\n    }\n\n    renderTankFileds() {\n        if (this.props.customer === null) {\n            return null;\n        }\n\n        return (\n            <FormGroup controlId=\"formBasicText\">\n                <ControlLabel>Tank ID (IMEI)</ControlLabel>\n                {!this.props.tank &&\n                    <div>\n                        <FormControl\n                            type=\"text\"\n                            placeholder={this.imeiPh}\n                            onChange={(e) => this.setState({ imei: e.target.value })}\n                        />\n                    </div>\n                }\n                {this.props.tank && <p> {this.props.tank.imei}</p>}\n                {this.renderIccdAndPhone()}\n                <ControlLabel>Tank Name</ControlLabel>\n                <FormControl\n                    type=\"text\"\n                    placeholder={this.namePh}\n                    onChange={(e) => this.setState({ name: e.target.value })}\n                />\n                <ControlLabel>Building Name</ControlLabel>\n                <FormControl\n                    type=\"text\"\n                    placeholder={this.buildingPh}\n                    onChange={(e) => this.setState({ building: e.target.value })}\n                />\n                <ControlLabel>Tank Capacity (in liters)</ControlLabel>\n                <FormControl\n                    type=\"text\"\n                    placeholder={this.capacityPh}\n                    onChange={(e) => this.setState({ capacity: parseInt(e.target.value, 10) })}\n                />\n                <ControlLabel>Tank Hight (cm)</ControlLabel>\n                <FormControl\n                    type=\"text\"\n                    placeholder={this.highPh}\n                    onChange={(e) => this.setState({ high: parseFloat(e.target.value, 10) })}\n                />\n                <ControlLabel>Sample Interval (in second, min 60)</ControlLabel>\n                <FormControl\n                    type=\"text\"\n                    placeholder={this.sampleIntervalPh}\n                    onChange={(e) => {\n                        this.setState({ sampling_interval: parseInt(e.target.value, 10) });\n                        this.samplingIntervalChanged = true;\n                    }}\n                />\n                <div></div>\n                <ControlLabel style={this.style}>{translate('liquid')}</ControlLabel>\n                <br />\n                <DropdownButton\n                    title={translate(this.state.liquid_type)}\n                    id=\"liquidType\">\n                    {liquids.map((liquid, index) =>\n                        <MenuItem eventKey={index} key={index} onSelect={this.liquidSelected}>{translate(liquid)}</MenuItem>\n                    )}\n                </DropdownButton>\n                <br/>\n                <ControlLabel style={this.style}>{translate('sensor')}</ControlLabel>\n                <br/>\n                <DropdownButton\n                    title={this.state.sensor_type + 'M'}\n                    id=\"sensorType\">\n                    {sensors.map((sensor, index) =>\n                        <MenuItem eventKey={index} key={index} onSelect={this.sensorSelected}>{sensor}M</MenuItem>\n                    )}\n                </DropdownButton>\n            </FormGroup>\n        )\n    }\n\n    switchSimConfig = () => {\n        this.setState({ simConfigurationIndex: this.state.simConfigurationIndex === 0 ? 1 : 0 })\n    }\n\n    renderFormTitle() {\n        if (this.props.customer) {\n            let title = \"Adding new tank to - \" + this.props.customer.name;\n            if (this.props.tank) {\n                return \"Updating Tank - \" + this.props.tank.name;\n            }\n\n            return (\n                <div>\n                    <div>\n                        {title}\n                    </div>\n                    <div>\n                        {this.simConfigurationTitle[this.state.simConfigurationIndex]}\n                        <Button onClick={this.switchSimConfig}>Switch</Button>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    getToken = (callback) => {\n        let json = {\n            \"UserName\": \"guy@orbitmonitoring.com\", \"Password\": \"mono123!\"\n        };\n\n        let uri = 'https://console.monogoto.io/Auth';\n\n        axios.post(uri, json).then(response => {\n            console.log(AppLogger( \"getToken succedded\"));\n            this.updateSettingsModal(true, \"done.\");\n            this.token = response.data.token;\n            callback && callback();\n        }).catch(error => {\n            console.log(AppLogger( error));\n            this.updateSettingsModal(false, \"Error on getting token\");\n        });\n    }\n\n    sendSemsToThing = (message, callback) => {\n        var config = {\n            headers: { 'Authorization': \"Bearer \" + this.token }\n        };\n\n        let json = {\n            \"Message\": message, \"From\": this.state.phone\n        };\n\n        let uri = \"https://console.monogoto.io/thing/ThingId_ICCID_\" + this.state.iccid + \"/sms\";\n\n        console.log(AppLogger( \"Sending thing API - \" + json.Message + \" \" + json.From));\n\n        axios.post(uri, json, config).then(response => {\n            console.log(AppLogger( \"testApi succedded\"));\n            this.updateSettingsModal(true, \"done.\");\n            callback && callback();\n        }).catch(error => {\n            console.log(AppLogger( error));\n            this.updateSettingsModal(false, \"error on configure Modem\");\n        }\n        );\n    }\n\n    configureThing = (nextFunction) => {\n        console.log(AppLogger( \"configureThing\"));\n        this.updateSettingsModal(true, \"getting token...\");\n        // first get the token\n        this.getToken(nextFunction);\n    }\n\n    setServerIp = () => {\n        console.log(AppLogger( \"setServerIp\"));\n        this.updateSettingsModal(true, \"Setting server IP...\");\n        // configure the server IP\n        this.sendSemsToThing(\"pw123456,server=18.214.154.46,5005\", this.setServerIpDone);\n    }\n\n    setServerIpDone = () => {\n        console.log(AppLogger( \"setServerIpDone\"));\n        this.nextFunction = this.setProtocol;\n        this.timer = setInterval(this.smsTimeOut, 15000);\n    }\n\n    setProtocol = () => {\n        this.updateSettingsModal(true, \"Setting protocol...\");\n        this.sendSemsToThing(\"pw123456,protocol=udp\", this.setProtocolDone);\n    }\n\n    setProtocolDone = () => {\n        console.log(AppLogger( \"setProtocolDone\"));\n        this.nextFunction = this.setInterval;\n        this.timer = setInterval(this.smsTimeOut, 15000);\n    }\n\n    setInterval = () => {\n        console.log(AppLogger( \"setInterval\"));\n        this.updateSettingsModal(true, \"Setting interval...\");\n        this.sendSemsToThing(\"pw123456,interval=\" + this.state.sampling_interval + \"s,\" + this.state.sampling_interval + \"s,0m,0d\", this.configureThingDone);\n    }\n\n    configureThingDone = () => {\n        console.log(AppLogger( \"configureThingDone\"));\n        this.updateSettingsModal(false, \"Setting thing done.\");\n    }\n\n    smsTimeOut = () => {\n        clearInterval(this.timer);\n        this.nextFunction && this.nextFunction();\n    }\n\n\n    updateData = () => {\n        if (this.props.tank) {\n            let liquidTypeIndex = 0;\n            let sensorTypeIndex = 0;\n            if (this.props.tank) {\n                this.imeiPh = this.props.tank.imei;\n                this.iccidPh = this.props.tank.iccid;\n                this.phoneNumberPh = this.props.tank.phone;\n                this.namePh = this.props.tank.name;\n                this.buildingPh = this.props.tank.building;\n                this.capacityPh = this.props.tank.capacity;\n                this.highPh = this.props.tank.high;\n                this.sampleIntervalPh = this.props.tank.sampling_interval;\n                for (let index in liquids) {\n                    if (liquids[index] === this.props.tank.liquid_type) {\n                        liquidTypeIndex = parseInt(index, 10);\n                        break;\n                    }\n                }\n\n                for (let index in sensors) {\n                    if (sensors[index] === this.props.tank.sensor_type) {\n                        sensorTypeIndex = parseInt(index, 10);\n                        break;\n                    }\n                }\n\n                this.setState({\n                    imei: this.imeiPh,\n                    phone: this.phoneNumberPh,\n                    name: this.namePh,\n                    building: this.buildingPh,\n                    capacity: this.capacityPh,\n                    high: this.highPh,\n                    iccid: this.iccidPh,\n                    sampling_interval: this.sampleIntervalPh,\n                    liquid_type: liquids[liquidTypeIndex],\n                    sensor_type: sensors[sensorTypeIndex]\n                })\n            }\n        }\n        clearInterval(this.timer);\n    }\n\n    render() {\n        console.log(AppLogger( \"render\"));\n\n        if (this.props.show === true) {\n            if (this.runTimer) {\n                this.timer = setInterval(this.updateData, 1000);\n                this.runTimer = false;\n                this.samplingIntervalChanged = false;\n            }\n        }\n        else {\n            this.runTimer = true;\n        }\n\n        return (\n            <Modal {...this.props} bsSize=\"lg\" aria-labelledby=\"contained-modal-title-sm\">\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-sm\">\n                        {this.renderFormTitle()}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        {this.renderTankFileds()}\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button bsStyle=\"warning\" onClick={this.props.onHide}>Cancel</Button>\n                    {this.props.tank &&\n                        <Button bsStyle=\"success\" onClick={() => this.updateTank()}>Update</Button>}\n                    {!this.props.tank &&\n                        <Button bsStyle=\"success\" onClick={() => this.addNewTank()}>Add</Button>}\n                </Modal.Footer>\n                <SettingsModal\n                    show={this.state.showSettingsModal}\n                    title={\"Setting Tank\"}\n                    text={this.state.settingsModalText} />\n            </Modal>\n        );\n    }\n}\n\nexport default TankForm;\n","import React from \"react\";\nimport { Grid, Row, Col, Button, MenuItem, DropdownButton, FormGroup, FormControl } from \"react-bootstrap\";\nimport { CustomerForm } from \"views/Admin/CustomerForm\"\nimport { UsersForm } from \"views/Admin/UsersForm\"\nimport { AppLogger } from \"../../app/Logger\";\nimport CustomersTable from \"../../app/db/CustomersTable\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { LogInHelper } from \"app/logInHelper\";\nimport { getPrimaryColor } from 'app/adminHelper'\nimport { translate } from \"../../app/lang/lang\";\nimport { TankForm } from \"views/Admin/TankForm\";\nimport TanksTable from \"../../app/db/TanksTable\";\n\nexport default class Customers extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            showCustomersModal: false,\n            showTankForm: false,\n            showUsersModal: false,\n            selectedCustomer: null,\n            filterStr: \"\"\n        };\n\n        let color = getPrimaryColor();\n        this.buttonStyle = { 'borderColor': color, 'color': color, 'whiteSpace': 'normal', 'margin': '3px' };\n    }\n\n    componentDidMount() {\n        this.readCustomers();\n    }\n\n    customerInfoReady = () => {\n        console.log(AppLogger( \"customerInfoReady\"));\n        this.setState({ customers: new CustomersTable().getCustomers() });\n    }\n\n    readCustomers() {\n        new CustomersTable().start(this.customerInfoReady, true);\n    }\n\n    readTanks = () => {\n        new TanksTable().start(null, true);\n    }\n\n    operationCallBack = () => {\n        this.readCustomers();\n    }\n\n    closeCustomersModal() {\n        this.readCustomers();\n        this.setState({ showCustomersModal: false, selectedCustomer: null });\n    }\n\n    closeUsersModal() {\n        this.setState({ showUsersModal: false, selectedCustomer: null });\n    }\n\n    closeTankForm() {\n        this.readTanks();\n        this.setState({ showTankForm: false, selectedCustomer: null });\n    }\n\n    deleteCustomer(customer) {\n        let confirmText = 'Deleting Customrt: Are you sure you want to delete ' + customer.name + \" ?\"\n        if (window.confirm(confirmText)) {\n            console.log(AppLogger( \"deleteCustomer \" + customer.name));\n\n            let customrtTable = new CustomersTable();\n            customrtTable.deleteCustomer(customer.id, this.operationCallBack);\n        }\n    }\n\n    addUser(customer) {\n        this.setState({ showUsersModal: true, selectedCustomer: customer });\n    }\n\n    addTank(customer) {\n        this.setState({ showTankForm: true, selectedCustomer: customer });\n    }\n\n    editCustomer = (customer) => {\n        this.setState({ showCustomersModal: true, selectedCustomer: customer })\n    }\n\n    renderManageCustomersButton(customer, index) {\n        return (\n            <DropdownButton\n                bsStyle=\"primary\"\n                style={this.buttonStyle}\n                bsSize=\"large\"\n                title={\"Settings\"}\n                key={index}\n                id={`dropdown-basic-${index}`}\n            >\n                <MenuItem eventKey=\"1\" style={this.buttonStyle} onClick={() => this.addUser(customer)}>Add User</MenuItem>\n                <MenuItem eventKey=\"2\" onClick={() => this.addTank(customer)}>Add Tank</MenuItem>\n                <MenuItem eventKey=\"3\" onClick={() => this.editCustomer(customer)}>Edit Customer</MenuItem>\n                <MenuItem divider />\n                <MenuItem eventKey=\"4\" onClick={() => this.deleteCustomer(customer)}>Delete Customer</MenuItem>\n            </DropdownButton>\n        );\n    }\n\n    renderFilterCard() {\n        let logInHelper = new LogInHelper();\n        if (logInHelper.isAdmin() === false) {\n            return null\n        }\n\n        return (\n            <Col xs={6}>\n                <Card\n                    id={\"filterCustomers\"}\n                    title=\"Filter Customers\"\n                    hCenter={true}\n                    content={\n                        <form>\n                            <FormGroup controlId=\"formBasicText\">\n                                <FormControl\n                                    type=\"text\"\n                                    value={this.state.value}\n                                    placeholder=\"Customer Name\"\n                                    onChange={(e) => this.setState({ filterStr: e.target.value })}\n                                />\n                            </FormGroup>\n                        </form>\n                    }\n                />\n            </Col>\n        );\n    }\n\n    getFilteredCustomers = () => {\n        if (this.state.customers.length === 0 || this.state.filterStr.length === 0) {\n            return this.state.customers;\n        }\n\n        let customers = [...this.state.customers];\n        for (let index = customers.length - 1; index >= 0; index--) {\n            //console.log(AppLogger(\"getFilteredCustomers index \" + index);\n            let name = customers[index].name;\n            //console.log(AppLogger(\"getFilteredCustomers name \" + name);\n            //console.log(AppLogger(\"getFilteredCustomers filter \" + this.state.filterStr);\n            if (name.search(this.state.filterStr) === -1) {\n                customers.splice(index, 1);\n            }\n        }\n\n        return customers;\n    }\n\n    renderCustomers() {\n        //console.log(AppLogger( \"rendring customers\");\n\n        let filteredCustomers = this.getFilteredCustomers();\n\n        return (\n            filteredCustomers.map((item, index) =>\n                <Col xs={6} md={3} key={index}>\n                    <Card\n                        hCenter={true}\n                        statsIcon=\"fa\"\n                        id=\"ManageCustomer\"\n                        title={\n                            <div>\n                                <div>{item.name}</div>\n                            </div>}\n                        category={\n                            <object>\n                                {translate('industry')}\n                                <br />\n                                {item.industry}\n                            </object>\n                        }\n                        stats={null}\n                        content={<center>{this.renderManageCustomersButton(item, index)}</center>}\n                    />\n                </Col>\n            )\n        );\n    }\n\n    renderAddCustomrtButton() {\n        return (\n            <center>\n                <Button bsSize=\"large\" bsStyle=\"primary\" style={this.buttonStyle} className=\"pe-7s-add-user\"\n                    onClick={() => this.setState({ showCustomersModal: true, customer: null })}>\n                    {\" \"}Add New Customer\n                </Button>\n            </center>\n        );\n    }\n\n    render() {\n        let isAdmin = new LogInHelper().isAdmin();\n\n        if (!isAdmin) {\n            return null;\n        }\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        {this.renderFilterCard()}\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <Card\n                                hCenter={true}\n                                statsIcon=\"fa\"\n                                id=\"addCustomer\"\n                                title=\"New Customer\"\n                                category=\"\"\n                                stats={null}\n                                content={this.renderAddCustomrtButton()}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        {this.renderCustomers()}\n                    </Row>\n                </Grid>\n                <CustomerForm show={this.state.showCustomersModal}\n                    customer={this.state.selectedCustomer}\n                    onHide={() => this.closeCustomersModal()} />\n                <UsersForm show={this.state.showUsersModal}\n                    customer={this.state.selectedCustomer}\n                    onHide={() => this.closeUsersModal()} />\n                <TankForm show={this.state.showTankForm}\n                    onHide={() => this.closeTankForm()}\n                    customer={this.state.selectedCustomer} />\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Modal, Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { AppLogger } from \"../../app/Logger\";\nimport TanksTable from \"../../app/db/TanksTable\";\n//import { translate } from \"../../app/lang/lang\";\n\nexport class AlertsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            at_level: -1,\n            alert: 0,\n            subject: \"\",\n            body: \"\",\n\n            numberOfAlerts: 0,\n            statusMessage: \"\"\n        };\n    }\n\n    createForm() {\n        return (\n            <form>\n                <FormGroup controlId=\"formBasicText\">\n                    <ControlLabel>Alert Level</ControlLabel>\n                    <FormControl\n                        type=\"text\"\n                        placeholder={\"Alert Level in %\"}\n                        onChange={(e) => this.setState({ at_level: parseInt(e.target.value, 10), statusMessage:\"\" })}\n                    />\n                    <ControlLabel>Mail Subject</ControlLabel>\n                    <FormControl\n                        type=\"text\"\n                        placeholder={\"Mail Subject\"}\n                        onChange={(e) => this.setState({ subject: e.target.value , statusMessage:\"\"})}\n                    />\n                    <ControlLabel>Mail Body</ControlLabel>\n                    <FormControl\n                        type=\"text\"\n                        placeholder={\"Mail Body\"}\n                        onChange={(e) => this.setState({ body: e.target.value, statusMessage:\"\" })}\n                    />\n                </FormGroup>\n                <Button bsStyle=\"success\" style={{ margin: '3px' }} onClick={() => this.addAlert()}>Add New Alert</Button>\n                {this.state.statusMessage}\n            </form>\n        );\n    }\n\n    addAlert = () => {\n        let validate = this.validate()\n        if (validate !== 'ok') {\n            this.setState({ statusMessage: validate });\n            return;\n        }\n        else {\n            this.setState({ statusMessage: \"\" });\n        }\n\n        // find empty alert id\n        let alertId = 0;\n        for (let index = 1; index < 2000; index++) {\n            for (let alertIndex in this.props.level_alerts) {\n                if (this.props.level_alerts[alertIndex].alert === index){\n                    break;\n                }\n            }\n            alertId = index;\n        }\n\n        let alert = {\n            \"alert\": alertId,\n            \"at_level\": this.state.at_level,\n            \"mail\": {\n                \"subject\": this.state.subject,\n                \"body\": this.state.body\n            }\n        }\n        this.props.tank.level_alerts.push(alert);\n        this.setState({ numberOfAlerts: this.props.tank.level_alerts.length });\n        this.updateAlerts();\n    }\n\n\n    getFormTitle() {\n        if (this.props.tank) {\n            return \"Tanks Alerts - \" + this.props.tank.name;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    delete = (index) => {\n        this.props.tank.level_alerts.splice(index, 1);\n        this.setState({ numberOfAlerts: this.props.tank.level_alerts.length });\n        this.updateAlerts();\n    }\n\n    renderAlerts = () => {\n        return (\n            <div>\n                {this.props.tank.level_alerts.length > 0 && <ControlLabel>Alerts</ControlLabel>}\n                {this.props.tank.level_alerts.map((alert, index) =>\n                    <div>\n                        Level - {alert.at_level}% Subject - {alert.mail.subject} Body - {alert.mail.body}\n                        <Button bsStyle=\"warning\" style={{ margin: '3px' }} value={index}\n                            onClick={(e) => this.delete(e.target.value)}>Delete</Button>\n                    </div>\n                )}\n                {this.props.tank.level_alerts.length > 0 && <hr />}\n            </div>\n        );\n    }\n\n    validate = () => {\n        if (this.state.at_level < 0 || this.state.at_level > 100) {\n            return 'invalid level - must be a number 0-100';\n        }\n        // check if this we have alert with the same level\n        for (let index in this.props.tank.level_alerts){\n            if (this.props.tank.level_alerts[index].at_level === this.state.at_level){\n                return \"invalid level - tank allready has alert in level \" + this.state.at_level + \"%\";\n            }\n        }\n\n        if (this.state.body.length === 0) {\n            return \"invalid body - body is empty\";\n        }\n        if (this.state.subject.length < 2) {\n            return \"invalid subject - subject is empty\";\n        }\n        return 'ok';\n    }\n\n    updateAlerts = () => {\n        let tt = new TanksTable();\n        let customer = this.props.tank.customer;\n        tt.updateTank(this.updateAlertsCallBack, this.props.tank, customer);\n    }\n\n    updateAlertsCallBack = (success) => {\n        if (success){\n            this.setState({statusMessage:\"Updating alerts succedded\"});\n        }\n        else{\n            this.setState({statusMessage:\"Updating alerts failed\"});\n        }\n        //this.props.onHide && this.props.onHide();\n    }\n\n    render() {\n        console.log(AppLogger( \"render\"));\n        if (this.props.tank === null) {\n            return null;\n        }\n\n        return (\n            <Modal {...this.props} bsSize=\"lg\" aria-labelledby=\"contained-modal-title-sm\">\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-sm\">\n                        {this.getFormTitle()}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderAlerts()}\n                    {this.createForm()}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button bsStyle=\"warning\" onClick={this.props.onHide}>Done</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default AlertsForm;","import React from \"react\";\nimport { Grid, Row, Col, MenuItem, DropdownButton } from \"react-bootstrap\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { LogInHelper } from \"app/logInHelper\";\nimport { getPrimaryColor, isAppReady } from 'app/adminHelper'\nimport TanksTable from \"../../app/db/TanksTable\"\nimport CustomersTable from \"../../app/db/CustomersTable\"\nimport { TankForm } from \"views/Admin/TankForm\";\nimport { renderTanksParams } from \"views/Tanks/Tanks\";\nimport { AlertsForm } from \"./AlerstForm\";\nimport { isTankFiltered, renderFilterTanksCard } from \"../Tanks/Tanks\";\n\nexport default class Tanks extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showTankForm: false,\n            showAlerstForm: false,\n            filterStr: \"\",\n            tank: null,\n            customer: null,\n            tanks: []\n        };\n        let color = getPrimaryColor();\n        this.buttonStyle = { 'borderColor': color, 'color': color, 'whiteSpace': 'normal' };\n    }\n\n    componentDidMount() {\n        //update reading timer\n        this.timer = setInterval(this.tick, 250);\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.timer);\n    }\n\n    tick = () => {\n        if (isAppReady()) {\n            this.tanksReady();\n            clearInterval(this.timer);\n        }\n    }\n\n    readTanks = () => {\n        let forceRead = true;\n        if (this.state.tanks.length === 0) {\n            forceRead = false;\n        }\n        let tt = new TanksTable();\n        tt.start(this.tanksReady, forceRead);\n    }\n\n    tanksReady = () => {\n        let tt = new TanksTable();\n        this.setState({ tanks: tt.getTanks().sort((a,b)=>a.name>b.name?1:-1) });\n    }\n\n    closeTankForm() {\n        this.setState({ showTankForm: false, tank: null, customer: null, tanks: [] });\n        let tt = new TanksTable();\n        tt.start(this.tanksReady, true);\n    }\n\n    editTank(tank) {\n        let ct = new CustomersTable();\n        let customer = ct.getCustomer(tank.customer);\n        this.setState({ showTankForm: true, tank: tank, customer: customer });\n    }\n\n    editAlert = (tank) => {\n        this.setState({ showAlerstForm: true, tank: tank });\n    }\n\n    closeAlertsForm = () => {\n        this.setState({ showAlerstForm: false, tank: null, customer: null });\n    }\n\n    deleteTank = (tank) => {\n        let confirmText = 'Deleting Tank: Are you sure you want to delete this tanks?';\n        if (window.confirm(confirmText)) {\n            let tt = new TanksTable();\n            tt.deleteTank(tank.imei, this.readTanks);\n        }\n    }\n\n    renderManageTankButton(tank, index) {\n        let title =\n            <div>\n                <div>{\"Settings\"}</div>\n            </div>;\n        return (\n            <DropdownButton\n                bsStyle=\"primary\"\n                style={this.buttonStyle}\n                bsSize=\"large\"\n                title={title}\n                key={index}\n                id={`dropdown-basic-${index}`}\n            >\n                <MenuItem eventKey=\"1\" onClick={() => this.editTank(tank)}>Edit Tank</MenuItem>\n                <MenuItem eventKey=\"2\" onClick={() => this.editAlert(tank)}>Edit Alerts</MenuItem>\n                <MenuItem divider />\n                <MenuItem eventKey=\"3\" onClick={() => this.deleteTank(tank)}>Delete Tank</MenuItem>\n            </DropdownButton>\n        );\n    }\n\n    renderTanks = () => {\n        return (\n            this.state.tanks.map((tank, index) => {\n                if (isTankFiltered(tank, this.state.filterStr)) {\n                    return null;\n                }\n                else {\n                    return (\n                        < Col xs={12} md={4} key={index} >\n                            <Card\n                                hCenter={true}\n                                statsIcon=\"fa\"\n                                id=\"EditTank\"\n                                title={\n                                    <div>\n                                        <div>{tank.name}</div>\n                                    </div>}\n                                category=\"\"\n                                stats={renderTanksParams(tank, null, false)}\n                                content={<center>{this.renderManageTankButton(tank, index)}</center>}\n                            />\n                        </Col >\n                    )\n                }\n            }\n            )\n        )\n    }\n\n    render() {\n        let isAdmin = new LogInHelper().isAdmin();\n\n        if (!isAdmin) {\n            return null;\n        }\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        {renderFilterTanksCard(this)}\n                    </Row>\n                    <Row>\n                        {this.renderTanks()}\n                    </Row>\n                </Grid>\n                <TankForm show={this.state.showTankForm}\n                    onHide={() => this.closeTankForm()}\n                    tank={this.state.tank}\n                    customer={this.state.customer} />\n                <AlertsForm show={this.state.showAlerstForm}\n                    tank={this.state.tank}\n                    onHide={() => this.closeAlertsForm()}/>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Grid, Row, Col, MenuItem, DropdownButton, FormGroup, FormControl } from \"react-bootstrap\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport UsersTable from \"../../app/db/UsersTable\"\nimport CustomersTable from \"../../app/db/CustomersTable\"\nimport { LogInHelper } from \"app/logInHelper\";\n\nexport default class Users extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { users: [], filterStr: \"\" };\n    }\n\n    componentDidMount() {\n        let usersTable = new UsersTable();\n        usersTable.start(this.usersReadyCallBack, true);\n    }\n\n    usersReadyCallBack = () => {\n        let usersTable = new UsersTable();\n        this.setState({ users: usersTable.getUsers() });\n    }\n\n    deleteUser(user) {\n        let confirmText = 'Deleting User: Are you sure you want to delete ' + user.name + \" ?\"\n        if (window.confirm(confirmText)) {\n            let usersTable = new UsersTable();\n            usersTable.remove(user.name, this.usersReadyCallBack);\n        }\n    }\n\n    renderActions = (user, index) => {\n        let title = \" User Settings \";\n        return (\n            <DropdownButton\n                bsStyle=\"primary\"\n                bsSize=\"large\"\n                className=\"pe-7s-settings\"\n                title={title}\n                key={index}\n                id={`dropdown-basic-${index}`}\n            >\n                <MenuItem eventKey=\"1\" onClick={() => this.deleteUser(user)}>Delete User</MenuItem>\n            </DropdownButton>\n        );\n    }\n\n    isFiltered = (user, custeomrName) => {\n        if (this.state.filterStr.length !== 0 &&\n            user.name.search(this.state.filterStr) === -1 &&\n            custeomrName.search(this.state.filterStr) === -1\n        ) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    renderUsers() {\n        return (\n            this.state.users.map((user, index) => {\n                let custeomrName = new CustomersTable().getCustomerName(user.customer_id);\n                if (this.isFiltered(user, custeomrName)) {\n                    return null;\n                }\n                else if (user.role.toLowerCase() !== 'admin') {\n                    return (\n                        <Col xs={12} sm={6} key={index}>\n                            <Card\n                                hCenter={true}\n                                statsIcon=\"fa\"\n                                id=\"ManageUser\"\n                                title={\n                                    <div>{user.name}</div>\n                                }\n                                category=\"\"\n                                stats={\"Customer - \" + custeomrName}\n                                content={<center>{this.renderActions(user, index)}</center>}\n                            />\n                        </Col>\n                    )\n                }\n                else {\n                    return null;\n                }\n            }\n            ));\n    }\n\n    renderFilterCard() {\n        let logInHelper = new LogInHelper();\n        if (logInHelper.isAdmin() === false) {\n            return null\n        }\n\n        return (\n            <Col md={4}>\n                <Card\n                    id={\"filterUsers\"}\n                    title=\"Filter Users\"\n                    hCenter={true}\n                    content={\n                        <form>\n                            <FormGroup controlId=\"formBasicText\">\n                                <FormControl\n                                    type=\"text\"\n                                    value={this.state.value}\n                                    placeholder=\"User / Customer\"\n                                    onChange={(e) => this.setState({ filterStr: e.target.value })}\n                                />\n                            </FormGroup>\n                        </form>\n                    }\n                />\n            </Col>\n        );\n    }\n\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        {this.renderFilterCard()}\n                    </Row>\n                    <Row>\n                        {this.renderUsers()}\n                    </Row>\n                </Grid>\n            </div>)\n    }\n}\n\n","import React from \"react\";\nimport { Grid, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { renderTanks } from \"../Tanks/Tanks.jsx\"\nimport TanksReading from \"../../app/db/TankReadings.jsx\";\nimport { isAppReady, getPrimaryColor } from 'app/adminHelper'\nimport { Card } from \"../../components/Card/Card\"\nimport { isTankFiltered, renderFilterTanksCard } from \"../Tanks/Tanks\";\nimport { AlertsForm } from \"./AlerstForm\";\nimport TanksTable from \"../../app/db/TanksTable\";\nimport TankCard from \"components/App/TankCard.jsx\"\nimport NotificationHelper from \"../../app/notificationHelper\"\nimport { levelAlertView, heartBeatView } from \"../Notifications/TanksNotifications\"\nimport Spinner from \"../App/Spinner\";\n\nexport default class Alerts extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { appIsredy: false , showAlerstForm: false, tank: null };\n        this.counter = 1;\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(this.isAppReady, 1000);\n        this.isAppReady();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    isAppReady = () => {\n        if (isAppReady()) {\n            this.setState({ appIsredy: true });\n        }\n        \n        if (this.state.showAlerstForm === false && this.counter++ % 60 === 0) { // refresh view to show new alerts\n            this.setState({ appIsredy: false });\n        }\n    }\n\n    renderAlertsTanks = () => {\n        let readings = new TanksReading().getLevelMonitoring(\"name\");\n        return renderTanks(readings, true);\n    }\n\n    showAlertsForm = (tank) => {\n        this.setState({ showAlerstForm: true, tank: tank });\n    }\n\n    closeAlertsForm = () => {\n        this.setState({ showAlerstForm: false, tank: null, customer: null });\n    }\n\n    renderAlertsAndEdit = (tank) => {\n        let nh = new NotificationHelper();\n        let levelNotification = nh.getLevelNotificationsOnTank(tank);\n        let hearBeatNotification = nh.getHeartBeatNotificationForTank(tank);\n        let editAlert = <center><Button bsStyle=\"danger\" style={{ margin: '3px', color:getPrimaryColor() }} onClick={() => this.showAlertsForm(tank)}>Edit Alerts</Button></center>;\n        if (levelNotification.length === 0 && hearBeatNotification.length === 0) {\n            return (\n                <div>\n                    <Alert bsStyle=\"info\" className=\"alert-with-icon\">\n                        <center>\n                            <span data-notify=\"icon\" className=\"pe-7s-bell\" />\n                            <span data-notify=\"message\">No Alerts On This Tank<q>{alert.name}</q></span>\n                        </center>\n                    </Alert>\n                    {editAlert}\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    {levelAlertView(levelNotification)}\n                    {heartBeatView(hearBeatNotification)}\n                    {editAlert}\n                </div>\n            )\n        }\n    }\n    \n\n    renderTanks = () => {\n        let readings = new TanksReading().getLevelMonitoring(\"name\");\n        return (\n            readings.map((reading, index) => {\n                let tt = new TanksTable();\n                let tank = tt.getTank(reading.imei);\n                if (tank === null) {\n                    return null;\n                }\n                let nh = new NotificationHelper();\n                let asAlerts = nh.getLevelNotificationsOnTank(tank).length!==0?true:false\n\n                if (isTankFiltered(tank, this.state.filterStr)) {\n                    return null;\n                }\n                else {\n                    let volume = parseInt(tank.capacity * reading.actual_level / 100, 10) + \" L\";\n                    return (\n                        < Col xs={12} md={4} key={index} >\n                            <Card\n                                hCenter={true}\n                                statsIcon=\"fa\"\n                                id=\"EditTank\"\n                                title={\n                                    <div>\n                                        <div>{tank.name}</div>\n                                    </div>}\n                                category=\"\"\n                                stats={this.renderAlertsAndEdit(tank)}\n                                content={<TankCard\n                                    value={reading.actual_level}\n                                    height={\"40%\"}\n                                    volume={volume}\n                                    asAlerts={asAlerts} />}\n                            />\n                        </Col>\n                    )\n                }\n            }\n            )\n        )\n    }\n\n\n    render() {\n        if (this.state.appIsredy === false) {\n            return (\n                <Card\n                    hCenter={true}\n                    title=\"Loading ...\"\n                    content={<center><Spinner/></center>}\n                />\n            );\n        }\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        {renderFilterTanksCard(this)}\n                    </Row>\n                    <Row>\n                        {this.renderTanks()}\n                    </Row>\n                </Grid>\n                <AlertsForm show={this.state.showAlerstForm}\n                    tank={this.state.tank}\n                    onHide={() => this.closeAlertsForm()} />\n            </div>\n        );\n        /*\n                return (\n                    <div className=\"content\">\n                        <Grid fluid>\n                            <Row>\n                                {this.renderAlertsTanks()}\n                            </Row>\n                        </Grid>\n                    </div>) */\n    }\n\n}\n\n","import React from \"react\";\nimport {AppLogerMessages} from \"app/Logger\"\n\nexport default class Logger extends React.Component{\n    \n    render(){\n        return (\n            <div>\n                {AppLogerMessages().map((msg, index) => \n                    <div key={index}>\n                        { msg }\n                    </div>)\n                }\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport Card from \"components/Card/Card\";\nimport { iconsArray } from \"variables/Variables.jsx\";\n\nclass Icons extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={12}>\n              <Card\n                title=\"202 Awesome Stroke Icons\"\n                ctAllIcons\n                category={\n                  <span>\n                    Handcrafted by our friends from{\" \"}\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href=\"http://themes-pixeden.com/font-demos/7-stroke/index.html\"\n                    >\n                      Pixeden\n                    </a>\n                  </span>\n                }\n                content={\n                  <Row>\n                    {iconsArray.map((prop, key) => {\n                      return (\n                        <Col\n                          lg={2}\n                          md={3}\n                          sm={4}\n                          xs={6}\n                          className=\"font-icon-list\"\n                          key={key}\n                        >\n                          <div className=\"font-icon-detail\">\n                            <i className={prop} />\n                            <input type=\"text\" defaultValue={prop} />\n                          </div>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Icons;\n","\nimport React from \"react\";\nimport { LogInHelper } from \"../../app/logInHelper\";\nimport { Redirect } from 'react-router-dom'\n\nexport default class LogOut extends React.Component {\n\n    componentDidMount() {\n        let logIn = new LogInHelper();\n        logIn.logOut();\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div>\n                <Redirect to='/dashboard' />\n            </div>\n        );\n    }\n}","import Dashboard from \"views/Dashboard/Dashboard\";\nimport Customers from \"views/Admin/Customers\"\nimport Tanks from \"views/Admin/Tanks\"\nimport Users from \"views/Admin/Users\"\nimport Alerst from \"views/Admin/Alerts\"\nimport Logger from \"../views/Admin/Logger\";\nimport Icons from \"../views/Icons/Icons\"\nimport Graph from \"../views/Graph/Graph\"\nimport Data from \"../views/Data/Data\"\nimport Locations from \"../views/Location/Locations\"\nimport LogOut from \"./../views/App/LogOut\"\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard\n  },\n  {\n    path: \"/graph\",\n    name: \"Graph\",\n    icon: \"pe-7s-graph1\",\n    component: Graph\n  },\n  {\n    path: \"/data\",\n    name: \"Data\",\n    icon: \"pe-7s-note2\",\n    component: Data\n  },\n  {\n    path: \"/locations\",\n    name: \"Locations\",\n    icon: \"pe-7s-map-2\",\n    component: Locations\n  },\n  {\n    path: \"/logout\",\n    name: \"Log Out\",\n    icon: \"pe-7s-power\",\n    component: LogOut\n  },\n  //{\n  //  path: \"/user\",\n  //  name: \"User Profile\",\n  //  icon: \"pe-7s-user\",\n  //  component: UserProfile\n  //},\n  //{\n  //  path: \"/table\",\n  //  name: \"Table List\",\n  //  icon: \"pe-7s-note2\",\n  //  component: TableList\n  //},\n  //{\n  //  path: \"/typography\",\n  //  name: \"Typography\",\n  //  icon: \"pe-7s-news-paper\",\n  //  component: Typography\n  //},\n\n\n\n  {\n    path: \"/customers\",\n    name: \"Admin - Customers\",\n    icon: \"pe-7s-users\",\n    component: Customers,\n    show: \"admin\"\n  },\n  {\n    path: \"/tanks\",\n    name: \"Admin - Tanks\",\n    icon: \"pe-7s-server\",\n    component: Tanks,\n    show: \"admin\"\n  },\n  {\n    path: \"/users\",\n    name: \"Admin - Users\",\n    icon: \"pe-7s-users\",\n    component: Users,\n    show: \"admin\"\n  },\n  {\n    path: \"/alerts\",\n    name: \"Admin - Alerts\",\n    icon: \"pe-7s-gleam\",\n    component: Alerst,\n    show: 'admin'\n  },\n  {\n    path: \"/logger\",\n    name: \"Admin - logs\",\n    icon: \"pe-7s-rocket\",\n    component: Logger,\n    show: \"admin\"\n  },\n  { \n   path: \"/icons\", \n    name: \"Icons\", \n    icon: \"pe-7s-science\", \n    component: Icons,\n    show:\"admin\" \n   },\n  //{ path: \"/maps\", name: \"Maps\", icon: \"pe-7s-map-marker\", component: Maps },\n  //{\n  //  path: \"/notifications\",\n  //  name: \"Notifications\",\n  //  icon: \"pe-7s-bell\",\n  //  component: Notifications\n  //},\n  //{\n  //  upgrade: true,\n  ///  path: \"/upgrade\",\n  //  name: \"Upgrade to PRO\",\n  //  icon: \"pe-7s-rocket\",\n  //  component: Upgrade\n  //},\n  { redirect: true, path: \"/\", to: \"/dashboard\", name: \"Dashboard\" }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport HeaderLinks from \"./HeaderLinks.jsx\";\nimport { getPrimaryColor, getPrimarySideColor} from \"../../app/adminHelper\"\nimport dashboardRoutes from \"routes/dashboard.jsx\";\nimport logo from \"assets/img/orbitBanner3000.png\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n//    var node = document.createElement(\"div\");\n//    node.id = \"bodyClick\";\n//    node.onclick = function() {\n//      this.parentElement.removeChild(this);\n//      document.documentElement.classList.toggle(\"nav-open\");\n//    };\n//    document.body.appendChild(node);\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  render() {\n    return (\n      <Navbar fluid style={{backgroundColor:getPrimaryColor()}} >\n        {/*this.state.sidebarExists===false && <img src={logo} alt=\"logo_image\" style={{ height: '10%' }} />*/}\n        <Navbar.Header>\n          <Navbar.Brand pullRight>\n            <a href=\"#pablo\" style={{color:getPrimarySideColor(), height:'10%'}}><b>{this.getBrand()}</b></a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <HeaderLinks />\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"assets/img/orbitBanner3000.png\";\nimport { LogInHelper } from \"app/logInHelper\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\nimport { isAppReady } from 'app/adminHelper'\nimport { getMenuTextColor } from 'app/adminHelper'\nimport { getVersion, getPrimarySideColor, getPrimaryColor } from '../../app/adminHelper'\n\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      appIsReady: false\n    };\n  }\n  componentDidMount = () => {\n    this.timer = setInterval(this.checkIfAppIsReady, 1000);\n    this.checkIfAppIsReady();\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer);\n  }\n\n  checkIfAppIsReady = () => {\n    if (isAppReady()) {\n      this.setState({ appIsReady: true });\n      clearInterval(this.timer);\n    }\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    //const sidebarBackground = {\n    //  backgroundImage: \"url(\" + imagine + \")\"\n    //};\n    let logInHelper = new LogInHelper();\n    let isAdmin = logInHelper.isAdmin();\n    let logInUser = logInHelper.getLogedInUser();\n    return (\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={'primarySide'}\n      >\n        <div className=\"sidebar-background\" />\n        <div className=\"logo\" style={{ backgroundColor: 'white' }}>\n          <img src={logo} alt=\"logo_image\" style={{ height: '8.4%' }} />\n        </div>\n        <div className=\"sidebar-wrapper\">\n          <ul className=\"nav\">\n            {dashboardRoutes.map((prop, key) => {\n              let show = true;\n              if ((prop.show && prop.show === 'admin' && !isAdmin) ||\n                (prop.redirect && prop.redirect === true)) {\n                show = false;\n              }\n              if (show)\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.path)\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} style={{\n                        display: 'block',\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                        width: '100%',\n                        color: getMenuTextColor()\n                      }} />\n                      <div>\n                        <center><h4 style={{ color: getMenuTextColor() }}><b>{prop.name}</b></h4></center>\n                      </div>\n                    </NavLink>\n                  </li>\n                );\n              return null;\n            })}\n            <center>\n              <hr />\n              <div style={{ color: getMenuTextColor() }}><b>{getVersion()}</b></div>\n              <br />\n              <div style={{ color: getMenuTextColor() }}><b>User Name - {logInUser}</b></div>\n              <hr />\n            </center>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import { AppLogger } from \"app/Logger\";\nimport UsersTable from '../../app/db/UsersTable'\nimport { Cookies } from 'react-cookie';\nimport React from \"react\";\nimport { Modal, FormControl, Button } from 'react-bootstrap';\nimport { LogInHelper } from '../../app/logInHelper.jsx'\n\nexport default class LogIn extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { isLogIn: false, showAlert: false, showButton:false }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        if (new LogInHelper().isLogIn()) {\n            this.setState({ isLogIn: true });\n        }\n\n        let ut = new UsersTable();\n        ut.start(this.usersTableReady,true);\n    }\n\n    usersTableReady = () =>{\n        this.setState({showButton:true});\n    }\n\n    handleLogIn() {\n        console.log(AppLogger( \"handleLogIn\"));\n        console.log(AppLogger( this.state.userName));\n        console.log(AppLogger( this.state.password));\n\n        let ut = new UsersTable();\n        let user = ut.getUser(this.state.userName);\n\n        let loginAlert = null;\n        if (user) {\n            if (user.passwd === this.state.password) {\n                let cookie = new Cookies();\n                cookie.set('user', this.state.userName);\n                this.setState({ isLogIn: true, logInAlert: null });\n                window.location.reload();\n                return;\n            }\n            else {\n                loginAlert = \"the password for \" + this.state.userName + \" is incorrect\";\n            }\n        }\n        else {\n            loginAlert = this.state.userName + \" not found\";\n        }\n        this.setState({ isLogIn: false, logInAlert: loginAlert });\n    }\n\n    handleChange(e) {\n        const target = e.target;\n\n        this.setState({\n            [target.name]: target.value,\n            logInAlert: null\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.isLogIn === false &&\n                    <Modal\n                        show={true}\n                        bsSize='lg'\n                        onHide={this.handleHide}\n                        container={this}\n                        aria-labelledby=\"contained-modal-title\"\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title\">\n                                LogIn\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            User Name:\n                            <FormControl\n                                type=\"text\"\n                                placeholder=\"user name\"\n                                onChange={this.handleChange}\n                                name=\"userName\"\n                            />\n                            Password:\n                            <FormControl\n                                type=\"text\"\n                                placeholder=\"password\"\n                                onChange={this.handleChange}\n                                name=\"password\"\n                            />\n                        </Modal.Body>\n                        <Modal.Footer>\n                            {this.state.logInAlert &&\n                                <center>\n                                    Failed to Login: {this.state.logInAlert}\n                                </center>\n                            }\n                            {\n                                this.state.showButton && \n                                <Button onClick={() => this.handleLogIn()}>LogIn</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                }\n            </div>\n        );\n    }\n\n}","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\n\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: Dashboard }];\n\nexport default indexRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\nimport { LogInHelper } from \"../../app/logInHelper\";\nimport LogIn from \"../../views/App/login.jsx\"\nimport UsersTable from \"../../app/db/UsersTable\";\nimport TanksTable from \"../../app/db/TanksTable\";\nimport CustomersTable from \"../../app/db/CustomersTable\";\nimport TanksReading from \"../../app/db/TankReadings\";\nimport {appIsReady} from \"../../app/adminHelper\"\nimport {setGraphFilteredTank, setDataFilteredTank} from \"../../app/readingsHelper\"\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      appDbReady: 0\n    };\n  }\n\n  componentDidMount = () => {\n    // read mandatory tables \n    new UsersTable().start(this.userTableReady,false);\n  }\n\n  userTableReady = () => {\n    new TanksTable().start(this.tanksTableReady,false);\n  }\n\n  tanksTableReady = () => {\n    new CustomersTable().start(this.customersTableReady,false);\n  }\n\n  customersTableReady = () => {\n    new TanksReading().getLastReading(this.allIsReady);\n  }\n\n  allIsReady = () => {\n    let tanks = new TanksTable().getCustomerTanks(new LogInHelper().getLoggedInCustomerId());\n\n    if (tanks.length > 0){\n      setGraphFilteredTank(tanks[0]);\n      setDataFilteredTank(tanks[0]);\n    }\n\n    appIsReady(true);\n  }\n\n  dbReady = () => {\n    this.setState({appDbReady:this.state.appDbReady+1});\n  }\n\n  /*\nhandleNotificationClick(position) {\n  var color = Math.floor(Math.random() * 4 + 1);\n  var level;\n  switch (color) {\n    case 1:\n      level = \"success\";\n      break;\n    case 2:\n      level = \"warning\";\n      break;\n    case 3:\n      level = \"error\";\n      break;\n    case 4:\n      level = \"info\";\n      break;\n    default:\n      break;\n  }\n  this.state._notificationSystem.addNotification({\n    title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    message: (\n      <div>\n        Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n        every web developer.\n      </div>\n    ),\n    level: level,\n    position: position,\n    autoDismiss: 15\n  });\n}\n\ncomponentDidMount() {\n  this.setState({ _notificationSystem: this.refs.notificationSystem });\n  var _notificationSystem = this.refs.notificationSystem;\n  var color = Math.floor(Math.random() * 4 + 1);\n  var level;\n  switch (color) {\n    case 1:\n      level = \"success\";\n      break;\n    case 2:\n      level = \"warning\";\n      break;\n    case 3:\n      level = \"error\";\n      break;\n    case 4:\n      level = \"info\";\n      break;\n    default:\n      break;\n  }\n  _notificationSystem.addNotification({\n    title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    message: (\n      <div>\n        Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n        every web developer.\n      </div>\n    ),\n    level: level,\n    position: \"tr\",\n    autoDismiss: 15\n  });\n}\n*/\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  render() {\n    let logInHelper = new LogInHelper();\n    if (!logInHelper.isLogIn()) {\n      return (<LogIn />);\n    }\n    else {\n      return (\n        <div className=\"wrapper\">\n          {/*<NotificationSystem ref=\"notificationSystem\" style={style} />*/}\n          <Sidebar {...this.props} />\n          <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n            <Header {...this.props} />\n            <Switch>\n              {dashboardRoutes.map((prop, key) => {\n                if (prop.name === \"Notifications\")\n                  return (\n                    <Route\n                      path={prop.path}\n                      key={key}\n                      render={routeProps => (\n                        <prop.component\n                          {...routeProps}\n                          handleClick={this.handleNotificationClick}\n                        />\n                      )}\n                    />\n                  );\n                if (prop.redirect)\n                  return <Redirect from={prop.path} to={prop.to} key={key} />;\n                return (\n                  <Route path={prop.path} component={prop.component} key={key} />\n                );\n              })}\n            </Switch>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport indexRoutes from \"routes/index.jsx\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard.css?v=1.2.0\"; \nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport packageJson from '../package.json';\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n    {console.log(\"Version - \" + packageJson.version)}\n      {indexRoutes.map((prop, key) => {\n        return <Route to={prop.path} component={prop.component} key={key} />;\n      })}\n    </Switch>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"white\",\"primarySideColor\":\"#165B7D\",\"secondaryColor\":\"#e9f5ff\",\"menuTextColor\":\"#e3e2e2\",\"backgroundColor\":\"#e2e3e4\"};"],"sourceRoot":""}